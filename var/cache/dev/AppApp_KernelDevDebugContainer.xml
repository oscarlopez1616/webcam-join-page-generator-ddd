<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/var/www/symfony/App</parameter>
    <parameter key="kernel.project_dir">/var/www/symfony</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">App</parameter>
    <parameter key="kernel.cache_dir">/var/www/symfony/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/symfony/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="ProophEventStoreBundle">Prooph\Bundle\EventStore\ProophEventStoreBundle</parameter>
      <parameter key="ProophServiceBusBundle">Prooph\Bundle\ServiceBus\ProophServiceBusBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="OneupFlysystemBundle">Oneup\FlysystemBundle\OneupFlysystemBundle</parameter>
      <parameter key="OldSoundRabbitMqBundle">OldSound\RabbitMqBundle\OldSoundRabbitMqBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
      <parameter key="CommonBundle">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Symfony\Bundle\CommonBundle</parameter>
      <parameter key="SecurityAndAclBundle">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Bundle\SecurityAndAclBundle</parameter>
      <parameter key="CamLandingGeneratorBundle">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Symfony\Bundle\CamLandingGeneratorBundle</parameter>
      <parameter key="TrikoderOAuth2Bundle">Trikoder\Bundle\OAuth2Bundle\TrikoderOAuth2Bundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="ProophEventStoreBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/prooph/event-store-symfony-bundle/src</parameter>
        <parameter key="namespace">Prooph\Bundle\EventStore</parameter>
      </parameter>
      <parameter key="ProophServiceBusBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/prooph/service-bus-symfony-bundle/src</parameter>
        <parameter key="namespace">Prooph\Bundle\ServiceBus</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineCacheBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/doctrine/doctrine-cache-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineCacheBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="OneupFlysystemBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/oneup/flysystem-bundle</parameter>
        <parameter key="namespace">Oneup\FlysystemBundle</parameter>
      </parameter>
      <parameter key="OldSoundRabbitMqBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/php-amqplib/rabbitmq-bundle</parameter>
        <parameter key="namespace">OldSound\RabbitMqBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/symfony/web-server-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
      <parameter key="CommonBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/oscarlopez1616/auditor-framework/src/Common/Types/Infrastructure/Symfony/Bundle</parameter>
        <parameter key="namespace">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="SecurityAndAclBundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/oscarlopez1616/auditor-framework/src/Common/Module/SecurityAndAcl/Infrastructure/Symfony/Bundle</parameter>
        <parameter key="namespace">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="CamLandingGeneratorBundle" type="collection">
        <parameter key="path">/var/www/symfony/src/Module/CamLandingGenerator/Infrastructure/Symfony/Bundle</parameter>
        <parameter key="namespace">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="TrikoderOAuth2Bundle" type="collection">
        <parameter key="path">/var/www/symfony/vendor/trikoder/oauth2-bundle</parameter>
        <parameter key="namespace">Trikoder\Bundle\OAuth2Bundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">AppApp_KernelDevDebugContainer</parameter>
    <parameter key="container.autowiring.strict_mode">true</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/symfony/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/var/www/symfony/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/symfony/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/symfony/var/cache/dev/AppApp_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">AppApp_KernelDevDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/var/www/symfony/var/cache/dev/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="prooph_event_store.stream_table_map" type="collection"/>
    <parameter key="prooph_event_store.projection_managers" type="collection">
      <parameter key="cam_landing_generator_cam_unit_projection_manager">prooph_event_store.cam_landing_generator_cam_unit_projection_manager</parameter>
      <parameter key="cam_landing_generator_affiliate_projection_manager">prooph_event_store.cam_landing_generator_affiliate_projection_manager</parameter>
      <parameter key="security_and_acl_user_projection_manager">prooph_event_store.security_and_acl_user_projection_manager</parameter>
      <parameter key="security_and_acl_password_recovery_projection_manager">prooph_event_store.security_and_acl_password_recovery_projection_manager</parameter>
    </parameter>
    <parameter key="prooph_event_store.stores" type="collection">
      <parameter key="auditor_framework_event_store">prooph_event_store.auditor_framework_event_store</parameter>
    </parameter>
    <parameter key="prooph_service_bus.command_buses" type="collection">
      <parameter key="auditor_framework_command_bus">prooph_service_bus.auditor_framework_command_bus</parameter>
    </parameter>
    <parameter key="prooph_service_bus.auditor_framework_command_bus.configuration" type="collection">
      <parameter key="message_factory">prooph_service_bus.message_factory</parameter>
      <parameter key="message_data_converter">prooph_service_bus.message_data_converter.command</parameter>
      <parameter key="message_converter">prooph_service_bus.message_converter</parameter>
      <parameter key="plugins" type="collection"/>
      <parameter key="router" type="collection">
        <parameter key="routes" type="collection">
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserHandler</parameter>
          <parameter key="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitCommand">AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitHandler</parameter>
          <parameter key="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateCommand">AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateHandler</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="prooph_service_bus.event_buses" type="collection">
      <parameter key="auditor_framework_event_bus">prooph_service_bus.auditor_framework_event_bus</parameter>
    </parameter>
    <parameter key="prooph_service_bus.auditor_framework_event_bus.configuration" type="collection">
      <parameter key="message_factory">prooph_service_bus.message_factory</parameter>
      <parameter key="message_data_converter">prooph_service_bus.message_data_converter.event</parameter>
      <parameter key="message_converter">prooph_service_bus.message_converter</parameter>
      <parameter key="plugins" type="collection"/>
      <parameter key="router" type="collection">
        <parameter key="routes" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="prooph_service_bus.query_buses" type="collection">
      <parameter key="auditor_framework_query_bus">prooph_service_bus.auditor_framework_query_bus</parameter>
    </parameter>
    <parameter key="prooph_service_bus.auditor_framework_query_bus.configuration" type="collection">
      <parameter key="message_factory">prooph_service_bus.message_factory</parameter>
      <parameter key="message_data_converter">prooph_service_bus.message_data_converter.query</parameter>
      <parameter key="message_converter">prooph_service_bus.message_converter</parameter>
      <parameter key="plugins" type="collection"/>
      <parameter key="router" type="collection">
        <parameter key="routes" type="collection">
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdHandler</parameter>
          <parameter key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryHandler</parameter>
          <parameter key="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlQuery">AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlHandler</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="oauth2_grant" type="collection">
        <parameter key="class">Trikoder\Bundle\OAuth2Bundle\DBAL\Type\Grant</parameter>
      </parameter>
      <parameter key="oauth2_redirect_uri" type="collection">
        <parameter key="class">Trikoder\Bundle\OAuth2Bundle\DBAL\Type\RedirectUri</parameter>
      </parameter>
      <parameter key="oauth2_scope" type="collection">
        <parameter key="class">Trikoder\Bundle\OAuth2Bundle\DBAL\Type\Scope</parameter>
      </parameter>
      <parameter key="Uuid" type="collection">
        <parameter key="class">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\Doctrine\Type\DoctrineUuid</parameter>
      </parameter>
      <parameter key="id" type="collection">
        <parameter key="class">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\Doctrine\Type\DoctrineId</parameter>
      </parameter>
      <parameter key="UserId" type="collection">
        <parameter key="class">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\Type\DoctrineUserId</parameter>
      </parameter>
      <parameter key="Roles" type="collection">
        <parameter key="class">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\Type\DoctrineRoles</parameter>
      </parameter>
      <parameter key="PasswordRecoveryId" type="collection">
        <parameter key="class">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\Type\DoctrinePasswordRecoveryId</parameter>
      </parameter>
      <parameter key="CamUnitId" type="collection">
        <parameter key="class">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\Type\DoctrineCamUnitId</parameter>
      </parameter>
      <parameter key="CamUnitThumb" type="collection">
        <parameter key="class">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\Type\DoctrineCamUnitThumb</parameter>
      </parameter>
      <parameter key="WebUrl" type="collection">
        <parameter key="class">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\Type\DoctrineWebUrl</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
      <parameter key="event_store">doctrine.dbal.event_store_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/symfony/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/var/www/symfony/App/Migrations</parameter>
    <parameter key="doctrine_migrations.namespace">App\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.column_name">version</parameter>
    <parameter key="doctrine_migrations.column_length">14</parameter>
    <parameter key="doctrine_migrations.executed_at_column_name">executed_at</parameter>
    <parameter key="doctrine_migrations.all_or_nothing">false</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="nelmio_cors.map" type="collection"/>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection">
        <parameter>.*</parameter>
      </parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers">true</parameter>
      <parameter key="expose_headers" type="collection">
        <parameter>Location</parameter>
      </parameter>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="old_sound_rabbit_mq.connection.class">PhpAmqpLib\Connection\AMQPConnection</parameter>
    <parameter key="old_sound_rabbit_mq.socket_connection.class">PhpAmqpLib\Connection\AMQPSocketConnection</parameter>
    <parameter key="old_sound_rabbit_mq.lazy.connection.class">PhpAmqpLib\Connection\AMQPLazyConnection</parameter>
    <parameter key="old_sound_rabbit_mq.lazy.socket_connection.class">PhpAmqpLib\Connection\AMQPLazySocketConnection</parameter>
    <parameter key="old_sound_rabbit_mq.connection_factory.class">OldSound\RabbitMqBundle\RabbitMq\AMQPConnectionFactory</parameter>
    <parameter key="old_sound_rabbit_mq.binding.class">OldSound\RabbitMqBundle\RabbitMq\Binding</parameter>
    <parameter key="old_sound_rabbit_mq.producer.class">OldSound\RabbitMqBundle\RabbitMq\Producer</parameter>
    <parameter key="old_sound_rabbit_mq.consumer.class">OldSound\RabbitMqBundle\RabbitMq\Consumer</parameter>
    <parameter key="old_sound_rabbit_mq.multi_consumer.class">OldSound\RabbitMqBundle\RabbitMq\MultipleConsumer</parameter>
    <parameter key="old_sound_rabbit_mq.dynamic_consumer.class">OldSound\RabbitMqBundle\RabbitMq\DynamicConsumer</parameter>
    <parameter key="old_sound_rabbit_mq.batch_consumer.class">OldSound\RabbitMqBundle\RabbitMq\BatchConsumer</parameter>
    <parameter key="old_sound_rabbit_mq.anon_consumer.class">OldSound\RabbitMqBundle\RabbitMq\AnonConsumer</parameter>
    <parameter key="old_sound_rabbit_mq.rpc_client.class">OldSound\RabbitMqBundle\RabbitMq\RpcClient</parameter>
    <parameter key="old_sound_rabbit_mq.rpc_server.class">OldSound\RabbitMqBundle\RabbitMq\RpcServer</parameter>
    <parameter key="old_sound_rabbit_mq.logged.channel.class">OldSound\RabbitMqBundle\RabbitMq\AMQPLoggedChannel</parameter>
    <parameter key="old_sound_rabbit_mq.data_collector.class">OldSound\RabbitMqBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="old_sound_rabbit_mq.parts_holder.class">OldSound\RabbitMqBundle\RabbitMq\AmqpPartsHolder</parameter>
    <parameter key="old_sound_rabbit_mq.fallback.class">OldSound\RabbitMqBundle\RabbitMq\Fallback</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.application" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/var/www/symfony/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="trikoder.oauth2.persistence.doctrine.enabled">true</parameter>
    <parameter key="trikoder.oauth2.persistence.doctrine.manager">default</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="prooph_service_bus.plugin.symfony_data_collector.command_bus" type="collection">
        <parameter>prooph.command_bus</parameter>
        <parameter>@ProophServiceBus/Collector/debug_view.html.twig</parameter>
      </parameter>
      <parameter key="prooph_service_bus.plugin.symfony_data_collector.event_bus" type="collection">
        <parameter>prooph.event_bus</parameter>
        <parameter>@ProophServiceBus/Collector/debug_view.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="old_sound_rabbit_mq.base_amqp" type="collection">
      <parameter>old_sound_rabbit_mq.lazy_producer</parameter>
      <parameter>old_sound_rabbit_mq.event_enqueuer_producer</parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.doctrine_cache.contains_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.delete_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.flush_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.stats_command</parameter>
      <parameter>console.command.public_alias.TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController</parameter>
      <parameter>console.command.public_alias.TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\ProjectionRunCommandDecorator</parameter>
      <parameter>console.command.public_alias.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="nyholm.psr7.psr17_factory" class="Nyholm\Psr7\Factory\Psr17Factory" public="false"/>
    <service id="aws.s3_client" class="Aws\S3\S3Client">
      <argument type="collection">
        <argument key="version">latest</argument>
        <argument key="region">%env(AWS_REGION)%</argument>
        <argument key="credentials" type="collection">
          <argument key="key">%env(AWS_KEY)%</argument>
          <argument key="secret">%env(AWS_SECRET)%</argument>
        </argument>
      </argument>
    </service>
    <service id="prooph_event_store.pdo_mysql_event_store" class="Prooph\EventStore\Pdo\MySqlEventStore">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\MessageFactory"/>
      <argument type="service" id="prooph_event_store.connection.doctrine_pdo_connection"/>
      <argument type="service" id="prooph_event_store.mysql.single_stream_strategy"/>
      <argument>1000</argument>
      <argument>_event_streams</argument>
    </service>
    <service id="prooph_event_store.mysql.single_stream_strategy" class="Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy"/>
    <service id="prooph_event_store.connection.doctrine_pdo_connection" class="PDO">
      <factory service="doctrine.dbal.event_store_connection" method="getWrappedConnection"/>
    </service>
    <service id="prooph_event_sourcing.aggregate_translator" class="Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator"/>
    <service id="Prooph\EventStoreBusBridge\EventPublisher" class="Prooph\EventStoreBusBridge\EventPublisher" public="false">
      <tag name="prooph_event_store.default.plugin"/>
      <argument type="service" id="prooph_service_bus.default_event_bus"/>
    </service>
    <service id="Prooph\EventStoreBusBridge\TransactionManager" class="Prooph\EventStoreBusBridge\TransactionManager" public="false">
      <tag name="prooph_service_bus.default_command_bus.plugin"/>
      <argument type="service" id="app.event_store.default"/>
    </service>
    <service id="app.event_store.default" class="Prooph\EventStore\Pdo\MySqlEventStore" public="false">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\MessageFactory"/>
      <argument type="service" id="app.event_store.pdo_connection.mysql"/>
      <argument type="service" id="app.event_store.mysql.persistence_strategy"/>
    </service>
    <service id="app.event_store.pdo_connection.mysql" class="PDO" public="false">
      <argument>%env(MYSQL_DSN)%</argument>
      <argument>%env(MYSQL_USER)%</argument>
      <argument>%env(MYSQL_PASSWORD)%</argument>
    </service>
    <service id="app.event_store.mysql.persistence_strategy" class="Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy" public="false"/>
    <service id="Prooph\EventStore\Pdo\DefaultMessageConverter" class="Prooph\EventStore\Pdo\DefaultMessageConverter"/>
    <service id=".legacy_controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".legacy_resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
      <argument>false</argument>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/var/www/symfony/var/cache/dev/AppApp_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/var/www/symfony/App/Resources</argument>
      <argument type="collection">
        <argument>/var/www/symfony/App</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.join_page" type="service" id="app.cache.join_page" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.application" type="service" id="monolog.handler.application" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="app.cache.join_page" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.application" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator._cmka45"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~hqX1BL5" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~hqX1BL5" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~hqX1BL5"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/symfony</argument>
      <argument type="service" id=".2_~hqX1BL5"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/var/www/symfony</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>app.cache.join_page</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Psr16Cache" public="false">
      <argument type="service" id="cache.app"/>
      <deprecated>The "Psr\SimpleCache\CacheInterface" / "%service_id%" service is deprecated since Symfony 4.3. Use "Symfony\Contracts\Cache\CacheInterface" / "cache.app" instead.</deprecated>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.messenger.restart_workers_signal.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.join_page" type="service" id="app.cache.join_page" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.join_page" type="service" id="app.cache.join_page" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".cache_connection.n8fl_I1" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>%env(WEB_REDIS_URL)%</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".app.cache.join_page.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="app.cache.join_page"/>
    </service>
    <service id="app.cache.join_page" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="app.cache.join_page.recorder_inner"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~S_1adHL" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/var/www/symfony/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/var/www/symfony/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~S_1adHL"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.f1ancQ8"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/var/www/symfony/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="validator.mapping.cache.adapter"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4. Use validator.mapping.cache.adapter instead.</deprecated>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/var/www/symfony/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.Y7gDuDN"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="prooph_service_bus.plugin.symfony_data_collector.command_bus"/>
      </call>
      <call method="add">
        <argument type="service" id="prooph_service_bus.plugin.symfony_data_collector.event_bus"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/var/www/symfony/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/var/www/symfony/var/cache/dev/AppApp_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument type="service" id="cache.messenger.restart_workers_signal"/>
      </call>
      <call method="addInstance">
        <argument>app.cache.join_page</argument>
        <argument type="service" id="app.cache.join_page"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/var/www/symfony</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Symfony\EventListener\ExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>trikoder.oauth2.user_resolve</argument>
        <argument type="collection">
          <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\EventListener\UserResolveListener"/>
          <argument>onUserResolve</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>trikoder.oauth2.authorization_request_resolve</argument>
        <argument type="collection">
          <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\EventListener\AuthorizationRequestUserResolvingListener"/>
          <argument>onAuthorizationRequest</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\EventListener\ConvertExceptionToResponseListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id=".legacy_resolve_controller_name_subscriber"/>
          <argument>resolveControllerName</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.psr7.listener.response"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".1_LegacyRouteLoaderContainer~d.xNwPG" class="Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XwZNkPh"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <argument type="service" id="service_container"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use "routing.loader.container" instead.</deprecated>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".1_LegacyRouteLoaderContainer~d.xNwPG"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator._4eGLoe.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/symfony/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m90YCjy.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/var/www/symfony</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~bl7ELaz" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/var/www/symfony/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~bl7ELaz" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~bl7ELaz"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/var/www/symfony/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~bl7ELaz"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/var/www/symfony/config/secrets/dev</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/var/www/symfony/.env.dev.local</argument>
    </service>
    <service id=".2_~2vHw_Nh" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~2vHw_Nh" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument>null</argument>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
      <argument>null</argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>/var/www/symfony/var/cache/dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>/var/www/symfony/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~2vHw_Nh"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~2vHw_Nh"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator"/>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>3</argument>
            <argument>1048576</argument>
            <argument>null</argument>
            <argument>2</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter" public="false">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.h3sDyMn"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.api_token" type="service" id=".security.request_matcher.pWcQ2Mi"/>
        <argument key="security.firewall.map.context.api_healthcheck" type="service" id=".security.request_matcher.Z_CrzWL"/>
        <argument key="security.firewall.map.context.user_process_patch_forgot_password_change_password" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\CustomFirewallRequestMatcher"/>
        <argument key="security.firewall.map.context.user_by_email" type="service" id=".security.request_matcher.XnanJHN"/>
        <argument key="security.firewall.map.context.user_by_id" type="service" id=".security.request_matcher.H1g.EG0"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.p4VlLPC"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false"/>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\UserProvider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.api_token" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api_token</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.pWcQ2Mi</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.pWcQ2Mi" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/token$</argument>
    </service>
    <service id="security.firewall.map.context.api_token" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api_token"/>
    </service>
    <service id="security.firewall.map.config.api_healthcheck" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api_healthcheck</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Z_CrzWL</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Z_CrzWL" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/healthcheck/</argument>
    </service>
    <service id="security.firewall.map.context.api_healthcheck" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api_healthcheck"/>
    </service>
    <service id="security.firewall.map.config.user_process_patch_forgot_password_change_password" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>user_process_patch_forgot_password_change_password</argument>
      <argument>security.user_checker</argument>
      <argument>TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\CustomFirewallRequestMatcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.user_process_patch_forgot_password_change_password" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.user_process_patch_forgot_password_change_password"/>
    </service>
    <service id="security.firewall.map.config.user_by_email" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>user_by_email</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.XnanJHN</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.XnanJHN" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/security_and_acl/user/user_name/([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)</argument>
    </service>
    <service id="security.firewall.map.context.user_by_email" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.user_by_email"/>
    </service>
    <service id="security.firewall.map.config.user_by_id" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>user_by_id</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.H1g.EG0</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.H1g.EG0" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/security_and_acl/user/([a-zA-Z0-9_\-\.]+).(\/)?$</argument>
    </service>
    <service id="security.firewall.map.context.user_by_id" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.user_by_id"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id=".service_locator.h3sDyMn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.api_healthcheck" type="service" id="security.firewall.map.context.api_healthcheck"/>
        <argument key="security.firewall.map.context.api_token" type="service" id="security.firewall.map.context.api_token"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.user_by_email" type="service" id="security.firewall.map.context.user_by_email"/>
        <argument key="security.firewall.map.context.user_by_id" type="service" id="security.firewall.map.context.user_by_id"/>
        <argument key="security.firewall.map.context.user_process_patch_forgot_password_change_password" type="service" id="security.firewall.map.context.user_process_patch_forgot_password_change_password"/>
      </argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="prooph_event_store.store_definition" class="Prooph\EventStore\EventStore" public="true" abstract="true">
      <factory service="prooph_event_store.store_factory" method="createEventStore"/>
    </service>
    <service id="prooph_event_store.store_factory" class="Prooph\Bundle\EventStore\Factory\DefaultEventStoreFactory"/>
    <service id="prooph_event_store.plugin_definition" class="Prooph\EventStore\Plugin\Plugin" abstract="true"/>
    <service id="prooph_event_store.metadata_enricher_plugin_definition" class="Prooph\EventStore\Metadata\MetadataEnricherPlugin" abstract="true"/>
    <service id="prooph_event_store.metadata_enricher_aggregate_definition" class="Prooph\EventStore\Metadata\MetadataEnricherAggregate" abstract="true"/>
    <service id="prooph_event_store.projection_definition" class="Prooph\EventStore\Projection\ProjectionManager" public="true" abstract="true">
      <factory service="prooph_event_store.projection_factory" method="createProjectionManager"/>
    </service>
    <service id="prooph_event_store.projection_factory" class="Prooph\Bundle\EventStore\ProjectionManagerFactory"/>
    <service id="prooph_event_store.repository_definition" class="Prooph\EventSourcing\Aggregate\AggregateRepository" public="true" abstract="true">
      <factory service="prooph_event_store.repository_factory" method="create"/>
    </service>
    <service id="prooph_event_store.repository_factory" class="Prooph\Bundle\EventStore\RepositoryFactory"/>
    <service id="prooph_event_store.action_event_emitter_factory" class="Prooph\Bundle\EventStore\Factory\DefaultActionEventEmitterFactory"/>
    <service id="prooph_event_store.action_event_emitter" class="Prooph\Common\Event\ProophActionEventEmitter"/>
    <service id="prooph_event_store.message_converter" class="Prooph\Common\Messaging\NoOpMessageConverter"/>
    <service id="prooph_event_store.message_factory" class="Prooph\Common\Messaging\FQCNMessageFactory"/>
    <service id="Prooph\Bundle\EventStore\Command\AbstractProjectionCommand" class="Prooph\Bundle\EventStore\Command\AbstractProjectionCommand" public="true" autowire="true" abstract="true">
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionDeleteCommand" class="Prooph\Bundle\EventStore\Command\ProjectionDeleteCommand" public="true" autowire="true">
      <tag name="console.command" command="event-store:projection:delete"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
      <call method="setName">
        <argument>event-store:projection:delete</argument>
      </call>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionNamesCommand" class="Prooph\Bundle\EventStore\Command\ProjectionNamesCommand">
      <tag name="console.command" command="event-store:projection:names"/>
      <argument type="service" id="prooph_event_store.projection_managers_locator"/>
      <argument>%prooph_event_store.projection_managers%</argument>
      <call method="setName">
        <argument>event-store:projection:names</argument>
      </call>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionResetCommand" class="Prooph\Bundle\EventStore\Command\ProjectionResetCommand" public="true" autowire="true">
      <tag name="console.command" command="event-store:projection:reset"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
      <call method="setName">
        <argument>event-store:projection:reset</argument>
      </call>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionRunCommand" class="Prooph\Bundle\EventStore\Command\ProjectionRunCommand" public="true" autowire="true">
      <tag name="console.command" command="event-store:projection:run"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
      <call method="setName">
        <argument>event-store:projection:run</argument>
      </call>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionStateCommand" class="Prooph\Bundle\EventStore\Command\ProjectionStateCommand" public="true" autowire="true">
      <tag name="console.command" command="event-store:projection:state"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
      <call method="setName">
        <argument>event-store:projection:state</argument>
      </call>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionStopCommand" class="Prooph\Bundle\EventStore\Command\ProjectionStopCommand" public="true" autowire="true">
      <tag name="console.command" command="event-store:projection:stop"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
      <call method="setName">
        <argument>event-store:projection:stop</argument>
      </call>
    </service>
    <service id="Prooph\Bundle\EventStore\Command\ProjectionStreamPositionsCommand" class="Prooph\Bundle\EventStore\Command\ProjectionStreamPositionsCommand" public="true" autowire="true">
      <tag name="console.command" command="event-store:projection:positions"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
      <call method="setName">
        <argument>event-store:projection:positions</argument>
      </call>
    </service>
    <service id="prooph_event_store.projection_manager.cam_landing_generator_cam_unit_projection_manager" class="Prooph\EventStore\Projection\ProjectionManager" public="true">
      <argument type="service" id="prooph_event_store.pdo_mysql_event_store"/>
      <argument type="service" id="prooph_event_store.connection.doctrine_pdo_connection"/>
      <argument>event_streams</argument>
      <argument>_projections</argument>
      <factory service="prooph_event_store.projection_factory" method="createProjectionManager"/>
    </service>
    <service id="prooph_event_store.projection_manager.cam_landing_generator_affiliate_projection_manager" class="Prooph\EventStore\Projection\ProjectionManager" public="true">
      <argument type="service" id="prooph_event_store.pdo_mysql_event_store"/>
      <argument type="service" id="prooph_event_store.connection.doctrine_pdo_connection"/>
      <argument>event_streams</argument>
      <argument>_projections</argument>
      <factory service="prooph_event_store.projection_factory" method="createProjectionManager"/>
    </service>
    <service id="prooph_event_store.projection_manager.security_and_acl_user_projection_manager" class="Prooph\EventStore\Projection\ProjectionManager" public="true">
      <argument type="service" id="prooph_event_store.pdo_mysql_event_store"/>
      <argument type="service" id="prooph_event_store.connection.doctrine_pdo_connection"/>
      <argument>event_streams</argument>
      <argument>_projections</argument>
      <factory service="prooph_event_store.projection_factory" method="createProjectionManager"/>
    </service>
    <service id="prooph_event_store.projection_manager.security_and_acl_password_recovery_projection_manager" class="Prooph\EventStore\Projection\ProjectionManager" public="true">
      <argument type="service" id="prooph_event_store.pdo_mysql_event_store"/>
      <argument type="service" id="prooph_event_store.connection.doctrine_pdo_connection"/>
      <argument>event_streams</argument>
      <argument>_projections</argument>
      <factory service="prooph_event_store.projection_factory" method="createProjectionManager"/>
    </service>
    <service id="prooph_event_store.projection_managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cam_landing_generator_affiliate_projection_manager" type="service" id="prooph_event_store.projection_manager.cam_landing_generator_affiliate_projection_manager"/>
        <argument key="cam_landing_generator_cam_unit_projection_manager" type="service" id="prooph_event_store.projection_manager.cam_landing_generator_cam_unit_projection_manager"/>
        <argument key="security_and_acl_password_recovery_projection_manager" type="service" id="prooph_event_store.projection_manager.security_and_acl_password_recovery_projection_manager"/>
        <argument key="security_and_acl_user_projection_manager" type="service" id="prooph_event_store.projection_manager.security_and_acl_user_projection_manager"/>
      </argument>
    </service>
    <service id="prooph_event_store.projection_manager_for_projections_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cam_landing_generator_affiliate_projection" type="service" id="prooph_event_store.projection_manager.cam_landing_generator_affiliate_projection_manager"/>
        <argument key="cam_landing_generator_affiliate_projection_manager" type="service" id="prooph_event_store.projection_manager.cam_landing_generator_affiliate_projection_manager"/>
        <argument key="cam_landing_generator_cam_unit_projection" type="service" id="prooph_event_store.projection_manager.cam_landing_generator_cam_unit_projection_manager"/>
        <argument key="cam_landing_generator_cam_unit_projection_manager" type="service" id="prooph_event_store.projection_manager.cam_landing_generator_cam_unit_projection_manager"/>
        <argument key="security_and_acl_password_recovery_projection" type="service" id="prooph_event_store.projection_manager.security_and_acl_password_recovery_projection_manager"/>
        <argument key="security_and_acl_password_recovery_projection_manager" type="service" id="prooph_event_store.projection_manager.security_and_acl_password_recovery_projection_manager"/>
        <argument key="security_and_acl_user_projection" type="service" id="prooph_event_store.projection_manager.security_and_acl_user_projection_manager"/>
        <argument key="security_and_acl_user_projection_manager" type="service" id="prooph_event_store.projection_manager.security_and_acl_user_projection_manager"/>
      </argument>
    </service>
    <service id="prooph_event_store.projection_read_models_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cam_landing_generator_affiliate_projection" type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlAffiliateProjector"/>
        <argument key="cam_landing_generator_affiliate_projection_manager" type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlAffiliateProjector"/>
        <argument key="cam_landing_generator_cam_unit_projection" type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlCamUnitProjector"/>
        <argument key="cam_landing_generator_cam_unit_projection_manager" type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlCamUnitProjector"/>
        <argument key="security_and_acl_password_recovery_projection" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlPasswordRecoveryReadModel"/>
        <argument key="security_and_acl_password_recovery_projection_manager" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlPasswordRecoveryReadModel"/>
        <argument key="security_and_acl_user_projection" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlUserReadModel"/>
        <argument key="security_and_acl_user_projection_manager" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlUserReadModel"/>
      </argument>
    </service>
    <service id="prooph_event_store.projections_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cam_landing_generator_affiliate_projection" type="service" id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophAffiliateProjection"/>
        <argument key="cam_landing_generator_affiliate_projection_manager" type="service" id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophAffiliateProjection"/>
        <argument key="cam_landing_generator_cam_unit_projection" type="service" id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophCamUnitProjection"/>
        <argument key="cam_landing_generator_cam_unit_projection_manager" type="service" id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophCamUnitProjection"/>
        <argument key="security_and_acl_password_recovery_projection" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\PasswordRecovery\ReadModel\ProophPasswordRecoveryProjection"/>
        <argument key="security_and_acl_password_recovery_projection_manager" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\PasswordRecovery\ReadModel\ProophPasswordRecoveryProjection"/>
        <argument key="security_and_acl_user_projection" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\ReadModel\ProophUserProjection"/>
        <argument key="security_and_acl_user_projection_manager" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\ReadModel\ProophUserProjection"/>
      </argument>
    </service>
    <service id="prooph_event_store.auditor_framework_event_store" class="Prooph\EventStore\EventStore" public="true">
      <argument>auditor_framework_event_store</argument>
      <argument type="service" id="prooph_event_store.pdo_mysql_event_store"/>
      <argument type="service" id="prooph_event_store.action_event_emitter_factory"/>
      <argument>Prooph\Common\Event\ProophActionEventEmitter</argument>
      <argument>true</argument>
      <argument type="service" id="prooph_event_store.plugins_locator"/>
      <argument type="collection">
        <argument>prooph_event_store.metadata_enricher_plugin.auditor_framework_event_store</argument>
      </argument>
      <factory service="prooph_event_store.store_factory" method="createEventStore"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository" public="true">
      <argument>TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository</argument>
      <argument type="service" id="prooph_event_store.auditor_framework_event_store"/>
      <argument>TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain\AggregateRoot</argument>
      <argument type="service" id="prooph_event_sourcing.aggregate_translator"/>
      <argument>null</argument>
      <argument>auditor_framework_event_stream</argument>
      <argument>false</argument>
      <argument>false</argument>
      <factory service="prooph_event_store.repository_factory" method="create"/>
    </service>
    <service id="prooph_event_store.metadata_enricher_aggregate.auditor_framework_event_store" class="Prooph\EventStore\Metadata\MetadataEnricherAggregate">
      <argument type="collection"/>
    </service>
    <service id="prooph_event_store.metadata_enricher_plugin.auditor_framework_event_store" class="Prooph\EventStore\Metadata\MetadataEnricherPlugin">
      <tag name="prooph_event_store.auditor_framework_event_store.plugin"/>
      <argument type="service" id="prooph_event_store.metadata_enricher_aggregate.auditor_framework_event_store"/>
    </service>
    <service id="prooph_service_bus.handle_command_invoke_strategy" class="Prooph\ServiceBus\Plugin\InvokeStrategy\HandleCommandStrategy"/>
    <service id="prooph_service_bus.finder_invoke_strategy" class="Prooph\ServiceBus\Plugin\InvokeStrategy\FinderInvokeStrategy"/>
    <service id="prooph_service_bus.on_event_invoke_strategy" class="Prooph\ServiceBus\Plugin\InvokeStrategy\OnEventStrategy"/>
    <service id="prooph_service_bus.message_factory_plugin" class="Prooph\ServiceBus\Plugin\MessageFactoryPlugin" public="false" abstract="true"/>
    <service id="prooph_service_bus.message_factory" class="Prooph\Common\Messaging\FQCNMessageFactory"/>
    <service id="prooph_service_bus.plugin.service_locator" class="Prooph\ServiceBus\Plugin\ServiceLocatorPlugin" public="false" abstract="true"/>
    <service id="prooph_service_bus.plugin.psr_logger" class="Prooph\Bundle\ServiceBus\Plugin\PsrLoggerPlugin" public="false" abstract="true"/>
    <service id="prooph_service_bus.plugin.data_collector" class="Prooph\Bundle\ServiceBus\Plugin\DataCollectorPlugin" public="false" abstract="true"/>
    <service id="prooph_service_bus.plugin.symfony_data_collector" class="Prooph\Bundle\ServiceBus\Plugin\DataCollector" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="prooph_service_bus.async_switch_message_router" class="Prooph\ServiceBus\Plugin\Router\AsyncSwitchMessageRouter"/>
    <service id="prooph_service_bus.message_context_factory" class="Prooph\Bundle\ServiceBus\MessageContext\ContextFactory" public="false" abstract="true"/>
    <service id="prooph_service_bus.message_data_converter" class="Prooph\Bundle\ServiceBus\MessageContext\DefaultMessageDataConverter" public="false" abstract="true"/>
    <service id="prooph_service_bus.message_converter" class="Prooph\Common\Messaging\NoOpMessageConverter" public="false"/>
    <service id="prooph_service_bus.plugin.stopwatch" class="Prooph\Bundle\ServiceBus\Plugin\StopwatchPlugin" public="false">
      <tag name="prooph_service_bus.plugin"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="prooph_service_bus.command_bus" class="Prooph\Bundle\ServiceBus\CommandBus" abstract="true"/>
    <service id="prooph_service_bus.command_bus_router" class="Prooph\ServiceBus\Plugin\Router\CommandRouter" public="true" abstract="true"/>
    <service id="prooph_service_bus.plugin.symfony_data_collector.command_bus" class="Prooph\Bundle\ServiceBus\Plugin\DataCollector" public="false">
      <tag name="data_collector" id="prooph.command_bus" template="@ProophServiceBus/Collector/debug_view.html.twig"/>
      <argument type="service" id="service_container"/>
      <argument>command</argument>
    </service>
    <service id="prooph_service_bus.auditor_framework_command_bus" class="Prooph\Bundle\ServiceBus\CommandBus" public="true">
      <call method="setBusName">
        <argument>auditor_framework_command_bus</argument>
      </call>
      <call method="setBusType">
        <argument>command</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.plugin.stopwatch"/>
        <argument>prooph_service_bus.plugin.stopwatch</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_command_bus.plugin.data_collector"/>
        <argument>prooph_service_bus.auditor_framework_command_bus.plugin.data_collector</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_command_bus.plugin.psr_logger"/>
        <argument>prooph_service_bus.auditor_framework_command_bus.plugin.psr_logger</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.message_factory_plugin.auditor_framework_command_bus"/>
        <argument>prooph_service_bus.message_factory_plugin.auditor_framework_command_bus</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_command_bus.router"/>
        <argument>prooph_service_bus.auditor_framework_command_bus.router</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="auditor_framework_command_bus.plugin.service_locator"/>
        <argument>auditor_framework_command_bus.plugin.service_locator</argument>
      </call>
    </service>
    <service id="prooph_service_bus.message_data_converter.command" class="Prooph\Bundle\ServiceBus\MessageContext\DefaultMessageDataConverter" public="false">
      <argument type="service" id="prooph_service_bus.message_converter"/>
    </service>
    <service id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_command_bus" class="Prooph\Bundle\ServiceBus\MessageContext\ContextFactory" public="false">
      <argument type="service" id="prooph_service_bus.message_data_converter.command"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_command_bus.plugin.data_collector" class="Prooph\Bundle\ServiceBus\Plugin\DataCollectorPlugin" public="false">
      <tag name="prooph_service_bus.command_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_command_bus"/>
      <argument type="service" id="prooph_service_bus.plugin.symfony_data_collector.command_bus"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_command_bus.plugin.psr_logger" class="Prooph\Bundle\ServiceBus\Plugin\PsrLoggerPlugin" public="false">
      <tag name="monolog.logger" channel="command_bus.auditor_framework_command_bus"/>
      <tag name="prooph_service_bus.auditor_framework_command_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_command_bus"/>
      <argument type="service" id="monolog.logger.command_bus.auditor_framework_command_bus" on-invalid="null"/>
    </service>
    <service id="prooph_service_bus.message_factory.auditor_framework_command_bus" class="Prooph\Common\Messaging\FQCNMessageFactory"/>
    <service id="prooph_service_bus.message_factory_plugin.auditor_framework_command_bus" class="Prooph\ServiceBus\Plugin\MessageFactoryPlugin" public="false">
      <tag name="prooph_service_bus.auditor_framework_command_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_factory.auditor_framework_command_bus"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_command_bus.router" class="Prooph\ServiceBus\Plugin\Router\CommandRouter" public="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.plugin"/>
      <argument type="collection">
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserCommand">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserHandler</argument>
        <argument key="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitCommand">AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitHandler</argument>
        <argument key="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateCommand">AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateHandler</argument>
      </argument>
    </service>
    <service id="auditor_framework_command_bus.plugin.service_locator.locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateHandler" type="service" id="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateHandler"/>
        <argument key="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitHandler" type="service" id="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueHandler"/>
      </argument>
    </service>
    <service id="auditor_framework_command_bus.plugin.service_locator" class="Prooph\ServiceBus\Plugin\ServiceLocatorPlugin" public="false">
      <tag name="prooph_service_bus.auditor_framework_command_bus.plugin"/>
      <argument type="service" id="auditor_framework_command_bus.plugin.service_locator.locator"/>
    </service>
    <service id="prooph_service_bus.event_bus" class="Prooph\Bundle\ServiceBus\EventBus" abstract="true"/>
    <service id="prooph_service_bus.event_bus_router" class="Prooph\ServiceBus\Plugin\Router\EventRouter" public="true" abstract="true"/>
    <service id="prooph_service_bus.plugin.symfony_data_collector.event_bus" class="Prooph\Bundle\ServiceBus\Plugin\DataCollector" public="false">
      <tag name="data_collector" id="prooph.event_bus" template="@ProophServiceBus/Collector/debug_view.html.twig"/>
      <argument type="service" id="service_container"/>
      <argument>event</argument>
    </service>
    <service id="prooph_service_bus.auditor_framework_event_bus" class="Prooph\Bundle\ServiceBus\EventBus" public="true">
      <call method="setBusName">
        <argument>auditor_framework_event_bus</argument>
      </call>
      <call method="setBusType">
        <argument>event</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.plugin.stopwatch"/>
        <argument>prooph_service_bus.plugin.stopwatch</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_event_bus.plugin.data_collector"/>
        <argument>prooph_service_bus.auditor_framework_event_bus.plugin.data_collector</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_event_bus.plugin.psr_logger"/>
        <argument>prooph_service_bus.auditor_framework_event_bus.plugin.psr_logger</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.message_factory_plugin.auditor_framework_event_bus"/>
        <argument>prooph_service_bus.message_factory_plugin.auditor_framework_event_bus</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_event_bus.router"/>
        <argument>prooph_service_bus.auditor_framework_event_bus.router</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="auditor_framework_event_bus.plugin.service_locator"/>
        <argument>auditor_framework_event_bus.plugin.service_locator</argument>
      </call>
    </service>
    <service id="prooph_service_bus.message_data_converter.event" class="Prooph\Bundle\ServiceBus\MessageContext\DefaultMessageDataConverter" public="false">
      <argument type="service" id="prooph_service_bus.message_converter"/>
    </service>
    <service id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_event_bus" class="Prooph\Bundle\ServiceBus\MessageContext\ContextFactory" public="false">
      <argument type="service" id="prooph_service_bus.message_data_converter.event"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_event_bus.plugin.data_collector" class="Prooph\Bundle\ServiceBus\Plugin\DataCollectorPlugin" public="false">
      <tag name="prooph_service_bus.event_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_event_bus"/>
      <argument type="service" id="prooph_service_bus.plugin.symfony_data_collector.event_bus"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_event_bus.plugin.psr_logger" class="Prooph\Bundle\ServiceBus\Plugin\PsrLoggerPlugin" public="false">
      <tag name="monolog.logger" channel="event_bus.auditor_framework_event_bus"/>
      <tag name="prooph_service_bus.auditor_framework_event_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_event_bus"/>
      <argument type="service" id="monolog.logger.event_bus.auditor_framework_event_bus" on-invalid="null"/>
    </service>
    <service id="prooph_service_bus.message_factory.auditor_framework_event_bus" class="Prooph\Common\Messaging\FQCNMessageFactory"/>
    <service id="prooph_service_bus.message_factory_plugin.auditor_framework_event_bus" class="Prooph\ServiceBus\Plugin\MessageFactoryPlugin" public="false">
      <tag name="prooph_service_bus.auditor_framework_event_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_factory.auditor_framework_event_bus"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_event_bus.router" class="Prooph\ServiceBus\Plugin\Router\EventRouter" public="true">
      <tag name="prooph_service_bus.auditor_framework_event_bus.plugin"/>
      <argument type="collection"/>
    </service>
    <service id="auditor_framework_event_bus.plugin.service_locator.locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="auditor_framework_event_bus.plugin.service_locator" class="Prooph\ServiceBus\Plugin\ServiceLocatorPlugin" public="false">
      <tag name="prooph_service_bus.auditor_framework_event_bus.plugin"/>
      <argument type="service" id="auditor_framework_event_bus.plugin.service_locator.locator"/>
    </service>
    <service id="prooph_service_bus.query_bus" class="Prooph\Bundle\ServiceBus\QueryBus" abstract="true"/>
    <service id="prooph_service_bus.query_bus_router" class="Prooph\ServiceBus\Plugin\Router\QueryRouter" public="true" abstract="true"/>
    <service id="prooph_service_bus.auditor_framework_query_bus" class="Prooph\Bundle\ServiceBus\QueryBus" public="true">
      <call method="setBusName">
        <argument>auditor_framework_query_bus</argument>
      </call>
      <call method="setBusType">
        <argument>query</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.plugin.stopwatch"/>
        <argument>prooph_service_bus.plugin.stopwatch</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_query_bus.plugin.psr_logger"/>
        <argument>prooph_service_bus.auditor_framework_query_bus.plugin.psr_logger</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.message_factory_plugin.auditor_framework_query_bus"/>
        <argument>prooph_service_bus.message_factory_plugin.auditor_framework_query_bus</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="prooph_service_bus.auditor_framework_query_bus.router"/>
        <argument>prooph_service_bus.auditor_framework_query_bus.router</argument>
      </call>
      <call method="addPlugin">
        <argument type="service" id="auditor_framework_query_bus.plugin.service_locator"/>
        <argument>auditor_framework_query_bus.plugin.service_locator</argument>
      </call>
    </service>
    <service id="prooph_service_bus.message_data_converter.query" class="Prooph\Bundle\ServiceBus\MessageContext\DefaultMessageDataConverter" public="false">
      <argument type="service" id="prooph_service_bus.message_converter"/>
    </service>
    <service id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_query_bus" class="Prooph\Bundle\ServiceBus\MessageContext\ContextFactory" public="false">
      <argument type="service" id="prooph_service_bus.message_data_converter.query"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_query_bus.plugin.psr_logger" class="Prooph\Bundle\ServiceBus\Plugin\PsrLoggerPlugin" public="false">
      <tag name="monolog.logger" channel="query_bus.auditor_framework_query_bus"/>
      <tag name="prooph_service_bus.auditor_framework_query_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_context_factory.prooph_service_bus.auditor_framework_query_bus"/>
      <argument type="service" id="monolog.logger.query_bus.auditor_framework_query_bus" on-invalid="null"/>
    </service>
    <service id="prooph_service_bus.message_factory.auditor_framework_query_bus" class="Prooph\Common\Messaging\FQCNMessageFactory"/>
    <service id="prooph_service_bus.message_factory_plugin.auditor_framework_query_bus" class="Prooph\ServiceBus\Plugin\MessageFactoryPlugin" public="false">
      <tag name="prooph_service_bus.auditor_framework_query_bus.plugin"/>
      <argument type="service" id="prooph_service_bus.message_factory.auditor_framework_query_bus"/>
    </service>
    <service id="prooph_service_bus.auditor_framework_query_bus.router" class="Prooph\ServiceBus\Plugin\Router\QueryRouter" public="true">
      <tag name="prooph_service_bus.auditor_framework_query_bus.plugin"/>
      <argument type="collection">
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdHandler</argument>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryQuery">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryHandler</argument>
        <argument key="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlQuery">AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlHandler</argument>
      </argument>
    </service>
    <service id="auditor_framework_query_bus.plugin.service_locator.locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlHandler" type="service" id="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameHandler"/>
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameHandler" type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameHandler"/>
      </argument>
    </service>
    <service id="auditor_framework_query_bus.plugin.service_locator" class="Prooph\ServiceBus\Plugin\ServiceLocatorPlugin" public="false">
      <tag name="prooph_service_bus.auditor_framework_query_bus.plugin"/>
      <argument type="service" id="auditor_framework_query_bus.plugin.service_locator.locator"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager"/>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument>null</argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="sensio_framework_extra.psr7.http_message_factory" class="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory" public="false">
      <argument type="service" id="nyholm.psr7.psr17_factory"/>
      <argument type="service" id="nyholm.psr7.psr17_factory"/>
      <argument type="service" id="nyholm.psr7.psr17_factory"/>
      <argument type="service" id="nyholm.psr7.psr17_factory"/>
    </service>
    <service id="sensio_framework_extra.psr7.http_foundation_factory" class="Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory" public="false"/>
    <service id="sensio_framework_extra.psr7.listener.response" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\PsrResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.psr7.http_foundation_factory"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>event_store</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.event_store"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false"/>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.bpvU51K"/>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="dbname">%env(resolve:WEB_READ_MODEL_DATABASE_NAME)%</argument>
        <argument key="host">%env(resolve:WEB_READ_MODEL_DATABASE_HOST)%</argument>
        <argument key="port">%env(resolve:WEB_READ_MODEL_DATABASE_PORT)%</argument>
        <argument key="user">%env(resolve:WEB_READ_MODEL_DATABASE_USER)%</argument>
        <argument key="password">%env(resolve:WEB_READ_MODEL_DATABASE_PASSWORD)%</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion" type="string">5.7</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8mb4</argument>
          <argument key="collate">utf8mb4_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.event_store_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.event_store"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.event_store" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.event_store" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.event_store"/>
      </call>
    </service>
    <service id="doctrine.dbal.event_store_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.bpvU51K"/>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.event_store_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="dbname">%env(resolve:EVENT_STORE_DATABASE_NAME)%</argument>
        <argument key="host">%env(resolve:EVENT_STORE_DATABASE_HOST)%</argument>
        <argument key="port">%env(resolve:EVENT_STORE_DATABASE_PORT)%</argument>
        <argument key="user">%env(resolve:EVENT_STORE_DATABASE_USER)%</argument>
        <argument key="password">%env(resolve:EVENT_STORE_DATABASE_PASSWORD)%</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion" type="string">5.7</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8mb4</argument>
          <argument key="collate">utf8mb4_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.event_store_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.event_store_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~BnoHcl." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.I3K77mT"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="Common">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain</argument>
          <argument key="Common_Module_SecurityAndAcl">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain</argument>
          <argument key="CamLandingGenerator">AuditorFramework\Module\CamLandingGenerator\Domain</argument>
          <argument key="CamLandingGeneratorInfrastructure">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/var/www/symfony/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomStringFunction">
        <argument>JSON_EXTRACT</argument>
        <argument>Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mysql\JsonExtract</argument>
      </call>
      <call method="addCustomStringFunction">
        <argument>JSON_SEARCH</argument>
        <argument>Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mysql\JsonSearch</argument>
      </call>
      <call method="addEntityNamespace">
        <argument>TrikoderOAuth2Bundle</argument>
        <argument>Trikoder\Bundle\OAuth2Bundle\Model</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_yml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver" public="false">
      <argument type="collection">
        <argument key="/var/www/symfony/vendor/oscarlopez1616/auditor-framework/src/Common/Types/Infrastructure/Persistence/Doctrine/Mapping">TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain</argument>
        <argument key="/var/www/symfony/vendor/oscarlopez1616/auditor-framework/src/Common/Module/SecurityAndAcl/Infrastructure/Persistence/Doctrine/Mapping">TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain</argument>
        <argument key="/var/www/symfony/src/Module/CamLandingGenerator/Infrastructure/Persistence/Doctrine/Mapping/Domain">AuditorFramework\Module\CamLandingGenerator\Domain</argument>
        <argument key="/var/www/symfony/src/Module/CamLandingGenerator/Infrastructure/Persistence/Doctrine/Mapping/Infrastructure">AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>AuditorFramework\Module\CamLandingGenerator\Domain</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="/var/www/symfony/vendor/trikoder/oauth2-bundle/Resources/config/doctrine/model">Trikoder\Bundle\OAuth2Bundle\Model</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>Trikoder\Bundle\OAuth2Bundle\Model</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.metadata.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDumpSchemaDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsRollupDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsUpToDateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id=".service_locator.RnpDE64"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ORM\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>ProxyManager\Proxy\LazyLoadingInterface</argument>
            </argument>
          </argument>
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id=".service_locator.jiHemF9"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>null</argument>
      <argument>validators</argument>
    </service>
    <service id="jms_serializer.iterator_handler" class="JMS\Serializer\Handler\IteratorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.type_parser" class="JMS\Serializer\Type\Parser" public="false"/>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection">
        <argument key="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Resource">/var/www/symfony/vendor/oscarlopez1616/auditor-framework/src/Common/Types/Infrastructure/Ui/Http/Rest/ResourceRender/JmsSerializer/Annotation</argument>
      </argument>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/var/www/symfony/var/cache/dev/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="collection">
        <argument key="2" type="service" id="jms_serializer.deserialization_graph_navigator_factory"/>
        <argument key="1" type="service" id="jms_serializer.serialization_graph_navigator_factory"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
      </argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.deserialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument>null</argument>
    </service>
    <service id="jms_serializer.serialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument>null</argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false">
      <tag name="jms.expression.function_provider"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false"/>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>1024</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument type="collection"/>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="oneup_flysystem.adapter_factory.local" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\LocalFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.nulladapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\NullAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.zip" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\ZipFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.awss3v2" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AwsS3V2Factory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.awss3v3" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AwsS3V3Factory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.azureblob" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AzureBlobFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.dropbox" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\DropboxFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.googlecloudstorage" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GoogleCloudStorageFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.rackspace" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\RackspaceFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.webdav" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\WebDavFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.ftp" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\FtpFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.sftp" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\SftpFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.gridfs" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GridFSFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.customadapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\CustomAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.memory" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\MemoryAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.fallback" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\FallbackFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.gaufrette" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GaufretteFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.replicate" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\ReplicateFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.adapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\AdapterFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.memory" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\MemoryFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.noop" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\NoopFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.memcached" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\MemcachedFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.php_redis" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\PhpRedisFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.predis" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\PredisFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.stash" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\StashFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.psr6" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\Psr6Factory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.adapter.local" class="League\Flysystem\Adapter\Local" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.cached" class="League\Flysystem\Cached\CachedAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.nulladapter" class="League\Flysystem\Adapter\NullAdapter" public="false" abstract="true"/>
    <service id="oneup_flysystem.adapter.memory" class="League\Flysystem\Memory\MemoryAdapter" public="false" abstract="true"/>
    <service id="oneup_flysystem.adapter.zip" class="League\Flysystem\ZipArchive\ZipArchiveAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.awss3v2" class="League\Flysystem\AwsS3v2\AwsS3Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.awss3v3" class="League\Flysystem\AwsS3v3\AwsS3Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.azureblob" class="League\Flysystem\AzureBlobStorage\AzureBlobStorageAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.dropbox" class="Spatie\FlysystemDropbox\DropboxAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.googlecloudstorage" class="Superbalist\Flysystem\GoogleStorage\GoogleStorageAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.rackspace" class="League\Flysystem\Rackspace\RackspaceAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.webdav" class="League\Flysystem\WebDAV\WebDAVAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.ftp" class="League\Flysystem\Adapter\Ftp" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.sftp" class="League\Flysystem\Sftp\SftpAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.gridfs" class="League\Flysystem\GridFS\GridFSAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.fallback" class="Litipk\Flysystem\Fallback\FallbackAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.gaufrette" class="Jenko\Flysystem\GaufretteAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.replicate" class="League\Flysystem\Replicate\ReplicateAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.mount_manager" class="League\Flysystem\MountManager" public="true"/>
    <service id="oneup_flysystem.filesystem" class="League\Flysystem\Filesystem" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.adapter" class="League\Flysystem\Cached\Storage\Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.memory" class="League\Flysystem\Cached\Storage\Memory" public="false" abstract="true"/>
    <service id="oneup_flysystem.cache.noop" class="League\Flysystem\Cached\Storage\Noop" public="false" abstract="true"/>
    <service id="oneup_flysystem.cache.memcached" class="League\Flysystem\Cached\Storage\Memcached" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.predis" class="League\Flysystem\Cached\Storage\Predis" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.php_redis" class="League\Flysystem\Cached\Storage\PhpRedis" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.stash" class="League\Flysystem\Cached\Storage\Stash" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.psr6" class="League\Flysystem\Cached\Storage\Psr6Cache" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.plugin.empty_dir" class="League\Flysystem\Plugin\EmptyDir"/>
    <service id="oneup_flysystem.plugin.get_with_metadata" class="League\Flysystem\Plugin\GetWithMetadata"/>
    <service id="oneup_flysystem.plugin.list_files" class="League\Flysystem\Plugin\ListFiles"/>
    <service id="oneup_flysystem.plugin.list_paths" class="League\Flysystem\Plugin\ListPaths"/>
    <service id="oneup_flysystem.plugin.list_with" class="League\Flysystem\Plugin\ListWith"/>
    <service id="oneup_flysystem.awss3v3_adapter_adapter" class="League\Flysystem\AwsS3v3\AwsS3Adapter" public="false">
      <argument type="service" id="aws.s3_client"/>
      <argument>%env(AWS_S3_BUCKET)%</argument>
      <argument>%env(AWS_S3_PREFIX)%</argument>
      <argument type="collection"/>
    </service>
    <service id="oneup_flysystem.default_filesystem" class="League\Flysystem\Filesystem" public="false">
      <tag name="oneup_flysystem.filesystem" key="default"/>
      <argument type="service" id="oneup_flysystem.awss3v3_adapter_adapter"/>
      <argument type="collection">
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id="oneup_flysystem.awss3v3_filesystem_filesystem" class="League\Flysystem\Filesystem" public="false">
      <tag name="oneup_flysystem.filesystem" key="awss3v3_filesystem"/>
      <argument type="service" id="oneup_flysystem.awss3v3_adapter_adapter"/>
      <argument type="collection">
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id="old_sound_rabbit_mq.parts_holder" class="OldSound\RabbitMqBundle\RabbitMq\AmqpPartsHolder" public="true">
      <call method="addPart">
        <argument>old_sound_rabbit_mq.base_amqp</argument>
        <argument type="service" id="old_sound_rabbit_mq.lazy_producer"/>
      </call>
      <call method="addPart">
        <argument>old_sound_rabbit_mq.base_amqp</argument>
        <argument type="service" id="old_sound_rabbit_mq.event_enqueuer_producer"/>
      </call>
      <call method="addPart">
        <argument>old_sound_rabbit_mq.producer</argument>
        <argument type="service" id="old_sound_rabbit_mq.lazy_producer"/>
      </call>
      <call method="addPart">
        <argument>old_sound_rabbit_mq.producer</argument>
        <argument type="service" id="old_sound_rabbit_mq.event_enqueuer_producer"/>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.anon_consumer_command" class="OldSound\RabbitMqBundle\Command\AnonConsumerCommand">
      <tag name="console.command" command="rabbitmq:anon-consumer"/>
      <call method="setName">
        <argument>rabbitmq:anon-consumer</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.batch_consumer_command" class="OldSound\RabbitMqBundle\Command\BatchConsumerCommand">
      <tag name="console.command" command="rabbitmq:batch:consumer"/>
      <call method="setName">
        <argument>rabbitmq:batch:consumer</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.consumer_command" class="OldSound\RabbitMqBundle\Command\ConsumerCommand">
      <tag name="console.command" command="rabbitmq:consumer"/>
      <call method="setName">
        <argument>rabbitmq:consumer</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.delete_command" class="OldSound\RabbitMqBundle\Command\DeleteCommand">
      <tag name="console.command" command="rabbitmq:delete"/>
      <call method="setName">
        <argument>rabbitmq:delete</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.dynamic_consumer_command" class="OldSound\RabbitMqBundle\Command\DynamicConsumerCommand">
      <tag name="console.command" command="rabbitmq:dynamic-consumer"/>
      <call method="setName">
        <argument>rabbitmq:dynamic-consumer</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.multiple_consumer_command" class="OldSound\RabbitMqBundle\Command\MultipleConsumerCommand">
      <tag name="console.command" command="rabbitmq:multiple-consumer"/>
      <call method="setName">
        <argument>rabbitmq:multiple-consumer</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.purge_consumer_command" class="OldSound\RabbitMqBundle\Command\PurgeConsumerCommand">
      <tag name="console.command" command="rabbitmq:purge"/>
      <call method="setName">
        <argument>rabbitmq:purge</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.command.rpc_server_command" class="OldSound\RabbitMqBundle\Command\RpcServerCommand">
      <tag name="console.command" command="rabbitmq:rpc-server"/>
      <call method="setName">
        <argument>rabbitmq:rpc-server</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.command.setup_fabric_command" class="OldSound\RabbitMqBundle\Command\SetupFabricCommand">
      <tag name="console.command" command="rabbitmq:setup-fabric"/>
      <call method="setName">
        <argument>rabbitmq:setup-fabric</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.command.std_in_producer_command" class="OldSound\RabbitMqBundle\Command\StdInProducerCommand">
      <tag name="console.command" command="rabbitmq:stdin-producer"/>
      <call method="setName">
        <argument>rabbitmq:stdin-producer</argument>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.connection_factory.default" class="OldSound\RabbitMqBundle\RabbitMq\AMQPConnectionFactory" public="false">
      <argument>PhpAmqpLib\Connection\AMQPConnection</argument>
      <argument type="collection">
        <argument key="url">%env(RABBITMQ_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">5672</argument>
        <argument key="user">guest</argument>
        <argument key="password">guest</argument>
        <argument key="vhost">/</argument>
        <argument key="lazy">false</argument>
        <argument key="connection_timeout">3</argument>
        <argument key="read_write_timeout">3</argument>
        <argument key="use_socket">false</argument>
        <argument key="ssl_context" type="collection"/>
        <argument key="keepalive">false</argument>
        <argument key="heartbeat">0</argument>
      </argument>
    </service>
    <service id="old_sound_rabbit_mq.connection.default" class="PhpAmqpLib\Connection\AMQPConnection" public="true">
      <tag name="old_sound_rabbit_mq.connection"/>
      <factory service="old_sound_rabbit_mq.connection_factory.default" method="createConnection"/>
    </service>
    <service id="old_sound_rabbit_mq.lazy_producer" class="OldSound\RabbitMqBundle\RabbitMq\Producer" public="true">
      <tag name="old_sound_rabbit_mq.base_amqp"/>
      <tag name="old_sound_rabbit_mq.producer"/>
      <argument type="service" id="old_sound_rabbit_mq.connection.default"/>
      <call method="setExchangeOptions">
        <argument type="collection">
          <argument key="name"></argument>
          <argument key="type">direct</argument>
          <argument key="passive">true</argument>
          <argument key="declare">false</argument>
        </argument>
      </call>
      <call method="setQueueOptions">
        <argument type="collection">
          <argument key="name"></argument>
          <argument key="declare">false</argument>
        </argument>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="old_sound_rabbit_mq.event_enqueuer_producer" class="OldSound\RabbitMqBundle\RabbitMq\Producer" public="true">
      <tag name="old_sound_rabbit_mq.base_amqp"/>
      <tag name="old_sound_rabbit_mq.producer"/>
      <argument type="service" id="old_sound_rabbit_mq.connection.default"/>
      <call method="setExchangeOptions">
        <argument type="collection">
          <argument key="name">sync_and_integration</argument>
          <argument key="type">fanout</argument>
          <argument key="passive">false</argument>
          <argument key="durable">true</argument>
          <argument key="auto_delete">false</argument>
          <argument key="internal">false</argument>
          <argument key="nowait">false</argument>
          <argument key="declare">true</argument>
          <argument key="arguments">null</argument>
          <argument key="ticket">null</argument>
        </argument>
      </call>
      <call method="setQueueOptions">
        <argument type="collection">
          <argument key="name"></argument>
          <argument key="declare">false</argument>
        </argument>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/var/www/symfony/var/log/error.log</argument>
      <argument>400</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="monolog.handler.application" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/var/www/symfony/var/log/application.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id=".1_~P2a.sWC" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/symfony/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/var/www/symfony/App</argument>
      <argument type="collection"/>
      <argument>/var/www/symfony/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.o9nGMXB.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/var/www/symfony</argument>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/prooph/service-bus-symfony-bundle/src/Resources/views</argument>
        <argument>ProophServiceBus</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/prooph/service-bus-symfony-bundle/src/Resources/views</argument>
        <argument>!ProophServiceBus</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/php-amqplib/rabbitmq-bundle/Resources/views</argument>
        <argument>OldSoundRabbitMq</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/php-amqplib/rabbitmq-bundle/Resources/views</argument>
        <argument>!OldSoundRabbitMq</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/symfony/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument>null</argument>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/var/www/symfony</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception::showAction</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.qhn3_sO"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~P2a.sWC"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/var/www/symfony</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/var/www/symfony/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/symfony/App</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id=".2_HtmlDumper~muixFlf" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~muixFlf" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/var/www/symfony</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use the "web_profiler.controller.exception_panel" service instead.</deprecated>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~muixFlf"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~muixFlf"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command" command="server:run"/>
      <argument>/var/www/symfony/public</argument>
      <argument>dev</argument>
      <argument>/var/www/symfony/var/cache</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command" command="server:start"/>
      <argument>/var/www/symfony/public</argument>
      <argument>dev</argument>
      <argument>/var/www/symfony/var/cache</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <argument>/var/www/symfony/var/cache</argument>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <argument>/var/www/symfony/var/cache</argument>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id="web_server.command.server_log" class="Symfony\Bundle\WebServerBundle\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\UploadCsvKeyValue\UploadCsvKeyValueService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\FileSystem\TheLeagueCloudDocumentManager"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Controller\Controller" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Controller\Controller" public="true" autowire="true" abstract="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\ApiGateway\ApiGatewayController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\ApiGateway\ApiGatewayController" public="true" autowire="true" abstract="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2ClientDirector"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2WithPasswordCredentialsClientBuilder"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Controller\HealthCheckController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Controller\HealthCheckController"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Controller\CsvController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\Controller\CsvController" public="true" autowire="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Symfony\EventListener\ExceptionListener" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Symfony\EventListener\ExceptionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="prooph_service_bus.auditor_framework_command_bus"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="prooph_service_bus.auditor_framework_query_bus"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="prooph_event_store.auditor_framework_event_store"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\ProjectionRunCommandDecorator" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\ProjectionRunCommandDecorator" public="false" autowire="true">
      <tag name="console.command"/>
      <argument type="service" id="prooph_event_store.projection_manager_for_projections_locator"/>
      <argument type="service" id="prooph_event_store.projections_locator"/>
      <argument type="service" id="prooph_event_store.projection_read_models_locator"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\ApiGateway\Unnax\UnnaxDecoder" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\ApiGateway\Unnax\UnnaxDecoder" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Amqp\Producer\RabbitDomainEventPublisherService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Amqp\Producer\RabbitDomainEventPublisherService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="old_sound_rabbit_mq.event_enqueuer_producer"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2ClientDirector" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2ClientDirector" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2WithPasswordCredentialsClientBuilder" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2WithPasswordCredentialsClientBuilder" public="false" autowire="true" autoconfigure="true">
      <argument>%env(API_BASE_URL)%</argument>
      <argument>%env(API_TOKEN_URL)%</argument>
      <argument type="collection">
        <argument key="client_id">%env(API_GATEWAY_OAUTH2_CLIENT_ID)%</argument>
        <argument key="client_secret">%env(API_GATEWAY_OAUTH2_CLIENT_SECRET)%</argument>
        <argument key="username">%env(SECURITY_AND_ACL_USER_API_GATEWAY_USER_NAME)%</argument>
        <argument key="password">%env(SECURITY_AND_ACL_USER_API_GATEWAY_PASSWORD)%</argument>
      </argument>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\MessageFactory" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\MessageFactory" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\CsvReader" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\CsvReader" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\FileSystem\TheLeagueCloudDocumentManager"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\DataTransformer\KeyValueFromCsvDataTransformer" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\DataTransformer\KeyValueFromCsvDataTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\CsvReader"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\FileSystem\TheLeagueCloudDocumentManager" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\FileSystem\TheLeagueCloudDocumentManager" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="oneup_flysystem.default_filesystem"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_query_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameQuery"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameService"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameAssembler"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameAssembler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUsername\GetUserByUsernameAssembler" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_query_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameQuery"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameService"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameAssembler"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameAssembler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserIdByUsername\GetUserIdByUsernameAssembler" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_query_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdQuery"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdService"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdAssembler"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdAssembler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\UserByUserId\GetUserByUserIdAssembler" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_query_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryQuery"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryService"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\PasswordRecoveryAssembler"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\GetPasswordRecoveryService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\PasswordRecoveryAssembler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Query\ForgotPassword\PasswordRecoveryAssembler" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\AddRoleToUser\AddRoleToUserService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\OauthClientService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\CreateUser\CreateUserService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ChangePassword\ChangePasswordService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\ChangePassword\ChangePasswordService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Amqp\Producer\RabbitDomainEventPublisherService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\ForgotPassword\CreateAndSendPasswordRecovery\CreateAndSendPasswordRecoveryService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\BlockUser\BlockUserService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserHandler" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Application\Command\UnblockUser\UnblockUserService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Http\Rest\Controller\UserController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Http\Rest\Controller\UserController" public="true" autowire="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\UserProvider" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\UserProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\CustomFirewallRequestMatcher" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\CustomFirewallRequestMatcher" public="false" autowire="true" autoconfigure="true"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\EventListener\UserResolveListener" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\EventListener\UserResolveListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="trikoder.oauth2.user_resolve" method="onUserResolve"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\UserProvider"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\OauthClientService" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\OauthClientService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineOauthClientRepository"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineOauthClientRepository" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineOauthClientRepository" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\OauthClientService"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="collection">
        <argument key="%env(SECURITY_AND_ACL_USER_SUPER_ADMIN_USER_NAME)%">%env(SECURITY_AND_ACL_USER_SUPER_ADMIN_PASSWORD)%</argument>
        <argument key="%env(SECURITY_AND_ACL_USER_FRONTEND_ADMIN_USER_NAME)%">%env(SECURITY_AND_ACL_USER_FRONTEND_ADMIN_PASSWORD)%</argument>
        <argument key="%env(SECURITY_AND_ACL_USER_API_GATEWAY_USER_NAME)%">%env(SECURITY_AND_ACL_USER_API_GATEWAY_PASSWORD)%</argument>
        <argument key="%env(SECURITY_AND_ACL_USER_TASK_RUNNER_USER_NAME)%">%env(SECURITY_AND_ACL_USER_TASK_RUNNER_PASSWORD)%</argument>
      </argument>
      <argument>/var/www/symfony/vendor/oscarlopez1616/auditor-framework/src/Common/Module/SecurityAndAcl/Infrastructure/Ui/Cli/initial_users.yaml</argument>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\ReadModel\ProophUserProjection" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\ReadModel\ProophUserProjection" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_event_store.projection" projection_name="security_and_acl_user_projection_manager" projection_manager="security_and_acl_user_projection_manager" read_model="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlUserReadModel"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlUserReadModel" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlUserReadModel" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\PasswordRecovery\ReadModel\ProophPasswordRecoveryProjection" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\PasswordRecovery\ReadModel\ProophPasswordRecoveryProjection" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_event_store.projection" projection_name="security_and_acl_password_recovery_projection_manager" projection_manager="security_and_acl_password_recovery_projection_manager" read_model="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlPasswordRecoveryReadModel"/>
    </service>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlPasswordRecoveryReadModel" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Projection\MysqlPasswordRecoveryReadModel" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitHandler" class="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateCamUnit\CreateCamUnitCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
      <argument type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\CamUnitContentPort\CumLouderPort"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateHandler" class="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_command_bus.route_target" message="AuditorFramework\Module\CamLandingGenerator\Application\Command\CreateAffiliate\CreateAffiliateCommand"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlHandler" class="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_service_bus.auditor_framework_query_bus.route_target" message="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\FindJoinPageByAffiliateUrlQuery"/>
      <argument type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineAffiliateReadModelRepository"/>
      <argument type="service" id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineCamUnitReadModelRepository"/>
      <argument type="service" id="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\JoinPageAssembler"/>
      <argument type="service" id="app.cache.join_page"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\JoinPageAssembler" class="AuditorFramework\Module\CamLandingGenerator\Application\Query\FindJoinPageByAffiliateUrl\JoinPageAssembler" public="false" autowire="true" autoconfigure="true"/>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\CamUnitContentPort\CumLouderPort" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\CamUnitContentPort\CumLouderPort" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="GuzzleHttp\Client"/>
      <argument>%env(CAM_CONTENT_PORT_URL)%</argument>
    </service>
    <service id="GuzzleHttp\Client" class="GuzzleHttp\Client" public="false" autowire="true" autoconfigure="true"/>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlCamUnitProjector" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlCamUnitProjector" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="app.cache.join_page"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophCamUnitProjection" class="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophCamUnitProjection" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_event_store.projection" projection_name="cam_landing_generator_cam_unit_projection_manager" projection_manager="cam_landing_generator_cam_unit_projection_manager" read_model="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlCamUnitProjector"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlAffiliateProjector" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlAffiliateProjector" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="app.cache.join_page"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophAffiliateProjection" class="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\ProophAffiliateProjection" public="false" autowire="true" autoconfigure="true">
      <tag name="prooph_event_store.projection" projection_name="cam_landing_generator_affiliate_projection_manager" projection_manager="cam_landing_generator_affiliate_projection_manager" read_model="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Projection\MysqlAffiliateProjector"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineAffiliateReadModelRepository" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineAffiliateReadModelRepository" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineCamUnitReadModelRepository" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineCamUnitReadModelRepository" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Ui\Http\Rest\Controller\CamUnitController" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Ui\Http\Rest\Controller\CamUnitController" public="true" autowire="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Ui\Http\Rest\Controller\AffiliateController" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Ui\Http\Rest\Controller\AffiliateController" public="true" autowire="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Ui\Http\Rest\Controller\JoinPageController" class="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Ui\Http\Rest\Controller\JoinPageController" public="true" autowire="true">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus"/>
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\League\Repository\ClientRepository" class="Trikoder\Bundle\OAuth2Bundle\League\Repository\ClientRepository">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\League\Repository\AccessTokenRepository" class="Trikoder\Bundle\OAuth2Bundle\League\Repository\AccessTokenRepository">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository" class="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\RefreshTokenManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\League\Repository\ScopeRepository" class="Trikoder\Bundle\OAuth2Bundle\League\Repository\ScopeRepository">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\InMemory\ScopeManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\League\Repository\UserRepository" class="Trikoder\Bundle\OAuth2Bundle\League\Repository\UserRepository">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverter"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\League\Repository\AuthCodeRepository" class="Trikoder\Bundle\OAuth2Bundle\League\Repository\AuthCodeRepository">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AuthorizationCodeManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Provider\OAuth2Provider" class="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Provider\OAuth2Provider">
      <argument></argument>
      <argument type="service" id="League\OAuth2\Server\ResourceServer"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Token\OAuth2TokenFactory"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Security\EntryPoint\OAuth2EntryPoint" class="Trikoder\Bundle\OAuth2Bundle\Security\EntryPoint\OAuth2EntryPoint"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Security\Firewall\OAuth2Listener" class="Trikoder\Bundle\OAuth2Bundle\Security\Firewall\OAuth2Listener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="sensio_framework_extra.psr7.http_message_factory"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Token\OAuth2TokenFactory"/>
    </service>
    <service id="League\OAuth2\Server\AuthorizationServer" class="League\OAuth2\Server\AuthorizationServer">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\ClientRepository"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\AccessTokenRepository"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\ScopeRepository"/>
      <argument type="service">
        <service class="League\OAuth2\Server\CryptKey">
          <argument>/var/www/symfony/etc/oAuth2/key/private.key</argument>
          <argument>null</argument>
          <argument>false</argument>
        </service>
      </argument>
      <argument>%env(resolve:OAUTH_ENCRIPTION_KEY)%</argument>
      <call method="enableGrantType">
        <argument type="service" id="League\OAuth2\Server\Grant\ClientCredentialsGrant"/>
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
      <call method="enableGrantType">
        <argument type="service" id="League\OAuth2\Server\Grant\PasswordGrant"/>
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
      <call method="enableGrantType">
        <argument type="service" id="League\OAuth2\Server\Grant\RefreshTokenGrant"/>
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
      <call method="enableGrantType">
        <argument type="service" id="League\OAuth2\Server\Grant\AuthCodeGrant"/>
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
      <call method="enableGrantType">
        <argument type="service" id="League\OAuth2\Server\Grant\ImplicitGrant"/>
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="League\OAuth2\Server\ResourceServer" class="League\OAuth2\Server\ResourceServer">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\AccessTokenRepository"/>
      <argument type="service">
        <service class="League\OAuth2\Server\CryptKey">
          <argument>/var/www/symfony/etc/oAuth2/key/public.key</argument>
          <argument>null</argument>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="League\OAuth2\Server\Grant\ClientCredentialsGrant" class="League\OAuth2\Server\Grant\ClientCredentialsGrant"/>
    <service id="League\OAuth2\Server\Grant\PasswordGrant" class="League\OAuth2\Server\Grant\PasswordGrant">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\UserRepository"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository"/>
      <call method="setRefreshTokenTTL">
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="League\OAuth2\Server\Grant\RefreshTokenGrant" class="League\OAuth2\Server\Grant\RefreshTokenGrant">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository"/>
      <call method="setRefreshTokenTTL">
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="League\OAuth2\Server\Grant\AuthCodeGrant" class="League\OAuth2\Server\Grant\AuthCodeGrant">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\AuthCodeRepository"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository"/>
      <argument type="service">
        <service class="DateInterval">
          <argument>PT10M</argument>
        </service>
      </argument>
      <call method="setRefreshTokenTTL">
        <argument type="service">
          <service class="DateInterval">
            <argument>P1M</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="League\OAuth2\Server\Grant\ImplicitGrant" class="League\OAuth2\Server\Grant\ImplicitGrant">
      <argument type="service">
        <service class="DateInterval">
          <argument>P1M</argument>
        </service>
      </argument>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Controller\AuthorizationController" class="Trikoder\Bundle\OAuth2Bundle\Controller\AuthorizationController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="League\OAuth2\Server\AuthorizationServer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Event\AuthorizationRequestResolveEventFactory"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverter"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\EventListener\AuthorizationRequestUserResolvingListener" class="Trikoder\Bundle\OAuth2Bundle\EventListener\AuthorizationRequestUserResolvingListener">
      <tag name="kernel.event_listener" event="trikoder.oauth2.authorization_request_resolve" method="onAuthorizationRequest" priority="1024"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\EventListener\ConvertExceptionToResponseListener" class="Trikoder\Bundle\OAuth2Bundle\EventListener\ConvertExceptionToResponseListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="10"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Controller\TokenController" class="Trikoder\Bundle\OAuth2Bundle\Controller\TokenController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="League\OAuth2\Server\AuthorizationServer"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Command\CreateClientCommand" class="Trikoder\Bundle\OAuth2Bundle\Command\CreateClientCommand">
      <tag name="console.command"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <call method="setName">
        <argument>trikoder:oauth2:create-client</argument>
      </call>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Command\UpdateClientCommand" class="Trikoder\Bundle\OAuth2Bundle\Command\UpdateClientCommand">
      <tag name="console.command"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <call method="setName">
        <argument>trikoder:oauth2:update-client</argument>
      </call>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Command\DeleteClientCommand" class="Trikoder\Bundle\OAuth2Bundle\Command\DeleteClientCommand">
      <tag name="console.command"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <call method="setName">
        <argument>trikoder:oauth2:delete-client</argument>
      </call>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Command\ListClientsCommand" class="Trikoder\Bundle\OAuth2Bundle\Command\ListClientsCommand">
      <tag name="console.command"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
      <call method="setName">
        <argument>trikoder:oauth2:list-clients</argument>
      </call>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Command\ClearExpiredTokensCommand" class="Trikoder\Bundle\OAuth2Bundle\Command\ClearExpiredTokensCommand">
      <tag name="console.command"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\RefreshTokenManager"/>
      <call method="setName">
        <argument>trikoder:oauth2:clear-expired-tokens</argument>
      </call>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverter" class="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverter"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter" class="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Event\AuthorizationRequestResolveEventFactory" class="Trikoder\Bundle\OAuth2Bundle\Event\AuthorizationRequestResolveEventFactory">
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
      <argument type="service" id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Token\OAuth2TokenFactory" class="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Token\OAuth2TokenFactory">
      <argument>ROLE_OAUTH2_</argument>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager" class="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager" class="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\RefreshTokenManager" class="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\RefreshTokenManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\InMemory\ScopeManager" class="Trikoder\Bundle\OAuth2Bundle\Manager\InMemory\ScopeManager"/>
    <service id="trikoder.oauth2.manager.in_memory.scope_manager" class="Trikoder\Bundle\OAuth2Bundle\Manager\InMemory\ScopeManager"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AuthorizationCodeManager" class="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AuthorizationCodeManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" class="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.tU8XB4g" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="responseFactory" type="service" id="nyholm.psr7.psr17_factory"/>
        <argument key="serverRequest" type="service" id=".errored..service_locator.tU8XB4g.Psr\Http\Message\ServerRequestInterface"/>
      </argument>
    </service>
    <service id=".service_locator..AVgILO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Trikoder\Bundle\OAuth2Bundle\Controller\AuthorizationController::indexAction" type="service" id=".service_locator.tU8XB4g"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Controller\TokenController::indexAction" type="service" id=".service_locator.tU8XB4g"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Controller\AuthorizationController:indexAction" type="service" id=".service_locator.tU8XB4g"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Controller\TokenController:indexAction" type="service" id=".service_locator.tU8XB4g"/>
      </argument>
    </service>
    <service id=".service_locator.Y7gDuDN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator._cmka45" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.sensio_framework_extra.psr7.argument_value_resolver.server_request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="debug.sensio_framework_extra.psr7.argument_value_resolver.server_request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="prooph_event_store.plugins_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="prooph_event_store.metadata_enricher_plugin.auditor_framework_event_store" type="service" id="prooph_event_store.metadata_enricher_plugin.auditor_framework_event_store"/>
      </argument>
    </service>
    <service id=".service_locator.bpvU51K" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.I3K77mT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.command_bus.auditor_framework_command_bus" class="Symfony\Bridge\Monolog\Logger">
      <argument>command_bus.auditor_framework_command_bus</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event_bus.auditor_framework_event_bus" class="Symfony\Bridge\Monolog\Logger">
      <argument>event_bus.auditor_framework_event_bus</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.query_bus.auditor_framework_query_bus" class="Symfony\Bridge\Monolog\Logger">
      <argument>query_bus.auditor_framework_query_bus</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.application"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator._4eGLoe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator._4eGLoe.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator._4eGLoe" method="withContext"/>
    </service>
    <service id=".service_locator.m90YCjy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m90YCjy.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m90YCjy" method="withContext"/>
    </service>
    <service id=".service_locator.o9nGMXB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.o9nGMXB.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.o9nGMXB" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.f1ancQ8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.XwZNkPh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.sensio_framework_extra.psr7.argument_value_resolver.server_request"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerBankReaderControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayBorrowerControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\ApiGatewayCashOutMethodControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerBankReaderControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\BorrowerControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashInCashOutMethodControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CashOutMethodControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantAttributionControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\OriginationRiskValuesControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\UserControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LenderControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\CsvControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\LoanApplicationControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantDataControllerVoter"/>
        <argument type="service" id="debug.security.voter.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\Api\MerchantIdInLenderContextControllerVoter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.sensio_framework_extra.psr7.argument_value_resolver.server_request.inner" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentValueResolver\Psr7ServerRequestResolver" public="false">
      <argument type="service" id="sensio_framework_extra.psr7.http_message_factory"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator..AVgILO"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator..AVgILO"/>
    </service>
    <service id=".errored..service_locator.tU8XB4g.Psr\Http\Message\ServerRequestInterface" class="Psr\Http\Message\ServerRequestInterface"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.FGNj74P"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="event-store:projection:delete">Prooph\Bundle\EventStore\Command\ProjectionDeleteCommand</argument>
        <argument key="event-store:projection:names">Prooph\Bundle\EventStore\Command\ProjectionNamesCommand</argument>
        <argument key="event-store:projection:reset">Prooph\Bundle\EventStore\Command\ProjectionResetCommand</argument>
        <argument key="event-store:projection:run">Prooph\Bundle\EventStore\Command\ProjectionRunCommand</argument>
        <argument key="event-store:projection:state">Prooph\Bundle\EventStore\Command\ProjectionStateCommand</argument>
        <argument key="event-store:projection:stop">Prooph\Bundle\EventStore\Command\ProjectionStopCommand</argument>
        <argument key="event-store:projection:positions">Prooph\Bundle\EventStore\Command\ProjectionStreamPositionsCommand</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="rabbitmq:anon-consumer">old_sound_rabbit_mq.anon_consumer_command</argument>
        <argument key="rabbitmq:batch:consumer">old_sound_rabbit_mq.batch_consumer_command</argument>
        <argument key="rabbitmq:consumer">old_sound_rabbit_mq.consumer_command</argument>
        <argument key="rabbitmq:delete">old_sound_rabbit_mq.delete_command</argument>
        <argument key="rabbitmq:dynamic-consumer">old_sound_rabbit_mq.dynamic_consumer_command</argument>
        <argument key="rabbitmq:multiple-consumer">old_sound_rabbit_mq.multiple_consumer_command</argument>
        <argument key="rabbitmq:purge">old_sound_rabbit_mq.purge_consumer_command</argument>
        <argument key="rabbitmq:rpc-server">old_sound_rabbit_mq.command.rpc_server_command</argument>
        <argument key="rabbitmq:setup-fabric">old_sound_rabbit_mq.command.setup_fabric_command</argument>
        <argument key="rabbitmq:stdin-producer">old_sound_rabbit_mq.command.std_in_producer_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="server:log">web_server.command.server_log</argument>
        <argument key="trikoder:oauth2:create-client">Trikoder\Bundle\OAuth2Bundle\Command\CreateClientCommand</argument>
        <argument key="trikoder:oauth2:update-client">Trikoder\Bundle\OAuth2Bundle\Command\UpdateClientCommand</argument>
        <argument key="trikoder:oauth2:delete-client">Trikoder\Bundle\OAuth2Bundle\Command\DeleteClientCommand</argument>
        <argument key="trikoder:oauth2:list-clients">Trikoder\Bundle\OAuth2Bundle\Command\ListClientsCommand</argument>
        <argument key="trikoder:oauth2:clear-expired-tokens">Trikoder\Bundle\OAuth2Bundle\Command\ClearExpiredTokensCommand</argument>
      </argument>
    </service>
    <service id=".service_locator.FGNj74P" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionDeleteCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionDeleteCommand"/>
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionNamesCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionNamesCommand"/>
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionResetCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionResetCommand"/>
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionRunCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionRunCommand"/>
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionStateCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionStateCommand"/>
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionStopCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionStopCommand"/>
        <argument key="Prooph\Bundle\EventStore\Command\ProjectionStreamPositionsCommand" type="service" id="Prooph\Bundle\EventStore\Command\ProjectionStreamPositionsCommand"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Command\ClearExpiredTokensCommand" type="service" id="Trikoder\Bundle\OAuth2Bundle\Command\ClearExpiredTokensCommand"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Command\CreateClientCommand" type="service" id="Trikoder\Bundle\OAuth2Bundle\Command\CreateClientCommand"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Command\DeleteClientCommand" type="service" id="Trikoder\Bundle\OAuth2Bundle\Command\DeleteClientCommand"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Command\ListClientsCommand" type="service" id="Trikoder\Bundle\OAuth2Bundle\Command\ListClientsCommand"/>
        <argument key="Trikoder\Bundle\OAuth2Bundle\Command\UpdateClientCommand" type="service" id="Trikoder\Bundle\OAuth2Bundle\Command\UpdateClientCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command"/>
        <argument key="old_sound_rabbit_mq.anon_consumer_command" type="service" id="old_sound_rabbit_mq.anon_consumer_command"/>
        <argument key="old_sound_rabbit_mq.batch_consumer_command" type="service" id="old_sound_rabbit_mq.batch_consumer_command"/>
        <argument key="old_sound_rabbit_mq.command.rpc_server_command" type="service" id="old_sound_rabbit_mq.command.rpc_server_command"/>
        <argument key="old_sound_rabbit_mq.command.setup_fabric_command" type="service" id="old_sound_rabbit_mq.command.setup_fabric_command"/>
        <argument key="old_sound_rabbit_mq.command.std_in_producer_command" type="service" id="old_sound_rabbit_mq.command.std_in_producer_command"/>
        <argument key="old_sound_rabbit_mq.consumer_command" type="service" id="old_sound_rabbit_mq.consumer_command"/>
        <argument key="old_sound_rabbit_mq.delete_command" type="service" id="old_sound_rabbit_mq.delete_command"/>
        <argument key="old_sound_rabbit_mq.dynamic_consumer_command" type="service" id="old_sound_rabbit_mq.dynamic_consumer_command"/>
        <argument key="old_sound_rabbit_mq.multiple_consumer_command" type="service" id="old_sound_rabbit_mq.multiple_consumer_command"/>
        <argument key="old_sound_rabbit_mq.purge_consumer_command" type="service" id="old_sound_rabbit_mq.purge_consumer_command"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="web_server.command.server_log" type="service" id="web_server.command.server_log"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false">
      <argument type="service" id=".cache_connection.n8fl_I1"/>
      <argument>VCWrkzjNKn</argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>AFXVUow9sV</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>3CdjBvbVyN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>+N1ManNYNQ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>I2ES+KyviC</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>8ghL2cqhRA</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal.recorder_inner" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false">
      <argument type="service" id=".cache_connection.n8fl_I1"/>
      <argument>jLDGu2jb3D</argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="app.cache.join_page.recorder_inner" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false">
      <argument type="service" id=".cache_connection.n8fl_I1"/>
      <argument>L+WpkVF-rT</argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>iwgcrcrmlt</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/symfony/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.metadata.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id=".service_locator.RnpDE64" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.jiHemF9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.form_error_handler" type="service" id="jms_serializer.form_error_handler"/>
        <argument key="jms_serializer.iterator_handler" type="service" id="jms_serializer.iterator_handler"/>
      </argument>
    </service>
    <service id=".service_locator.qhn3_sO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Psr\Http\Message\RequestFactoryInterface" alias="nyholm.psr7.psr17_factory" public="false"/>
    <service id="Psr\Http\Message\ResponseFactoryInterface" alias="nyholm.psr7.psr17_factory" public="false"/>
    <service id="Psr\Http\Message\ServerRequestFactoryInterface" alias="nyholm.psr7.psr17_factory" public="false"/>
    <service id="Psr\Http\Message\StreamFactoryInterface" alias="nyholm.psr7.psr17_factory" public="false"/>
    <service id="Psr\Http\Message\UploadedFileFactoryInterface" alias="nyholm.psr7.psr17_factory" public="false"/>
    <service id="Psr\Http\Message\UriFactoryInterface" alias="nyholm.psr7.psr17_factory" public="false"/>
    <service id="Prooph\EventStore\EventStore" alias="app.event_store.default" public="false"/>
    <service id="controller_name_converter" alias=".legacy_controller_name_converter" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="resolve_controller_name_subscriber" alias=".legacy_resolve_controller_name_subscriber" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.n8fl_I1" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $appCacheJoinPage" alias=".app.cache.join_page.taggable"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $appCacheJoinPage" alias="app.cache.join_page"/>
    <service id="Psr\Cache\CacheItemPoolInterface $appCacheJoinPage" alias="app.cache.join_page"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.user.provider.concrete.user_provider" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\UserProvider" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Symfony\Security\UserProvider"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Prooph\Common\Messaging\MessageFactory" alias="prooph_event_store.message_factory"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy" public="false"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="true"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.default" public="false"/>
    <service id="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" alias="jms_serializer.configured_serialization_context_factory" public="false"/>
    <service id="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" alias="jms_serializer.configured_deserialization_context_factory" public="false"/>
    <service id="default_filesystem" alias="oneup_flysystem.default_filesystem" public="true"/>
    <service id="League\Flysystem\FilesystemInterface $defaultFilesystem" alias="oneup_flysystem.default_filesystem" public="false"/>
    <service id="awss3v3_filesystem" alias="oneup_flysystem.awss3v3_filesystem_filesystem" public="true"/>
    <service id="League\Flysystem\FilesystemInterface $awss3v3Filesystem" alias="oneup_flysystem.awss3v3_filesystem_filesystem" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain\CloudDocumentManagerAdapter" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\FileSystem\TheLeagueCloudDocumentManager" public="false"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain\WriteModelRepository" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository" public="false"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain\AmqpCommandPublisherService" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Amqp\Producer\RabbitDomainEventPublisherService" public="false"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\TrikoderOauth2\OauthClientRepository" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineOauthClientRepository" public="false"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\PasswordRecovery\PasswordRecoveryReadModelRepository" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrinePasswordRecoveryReadModelRepository" public="false"/>
    <service id="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Domain\User\UserReadModelRepository" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Persistence\Doctrine\DoctrineUserReadModelRepository" public="false"/>
    <service id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\AffiliateReadModelRepository" alias="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineAffiliateReadModelRepository" public="false"/>
    <service id="AuditorFramework\Module\CamLandingGenerator\Domain\ReadModel\CamUnitReadModelRepository" alias="AuditorFramework\Module\CamLandingGenerator\Infrastructure\Persistence\Doctrine\DoctrineCamUnitReadModelRepository" public="false"/>
    <service id="AuditorFramework\Module\CamLandingGenerator\Domain\CamUnitContentAdapter" alias="AuditorFramework\Module\CamLandingGenerator\Infrastructure\CamUnitContentPort\CumLouderPort" public="false"/>
    <service id="trikoder.oauth2.league.repository.client_repository" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\ClientRepository"/>
    <service id="League\OAuth2\Server\Repositories\ClientRepositoryInterface" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\ClientRepository"/>
    <service id="trikoder.oauth2.league.repository.access_token_repository" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\AccessTokenRepository"/>
    <service id="League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\AccessTokenRepository"/>
    <service id="trikoder.oauth2.league.repository.refresh_token_repository" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository"/>
    <service id="League\OAuth2\Server\Repositories\RefreshTokenRepositoryInterface" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\RefreshTokenRepository"/>
    <service id="trikoder.oauth2.league.repository.scope_repository" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\ScopeRepository"/>
    <service id="League\OAuth2\Server\Repositories\ScopeRepositoryInterface" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\ScopeRepository"/>
    <service id="trikoder.oauth2.league.repository.user_repository" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\UserRepository"/>
    <service id="League\OAuth2\Server\Repositories\UserRepositoryInterface" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\UserRepository"/>
    <service id="trikoder.oauth2.league.repository.auth_code_repository" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\AuthCodeRepository"/>
    <service id="League\OAuth2\Server\Repositories\AuthCodeRepositoryInterface" alias="Trikoder\Bundle\OAuth2Bundle\League\Repository\AuthCodeRepository"/>
    <service id="trikoder.oauth2.security.authentication.provider.oauth2_provider" alias="Trikoder\Bundle\OAuth2Bundle\Security\Authentication\Provider\OAuth2Provider"/>
    <service id="trikoder.oauth2.security.entry_point.oauth2_entry_point" alias="Trikoder\Bundle\OAuth2Bundle\Security\EntryPoint\OAuth2EntryPoint"/>
    <service id="trikoder.oauth2.security.firewall.oauth2_listener" alias="Trikoder\Bundle\OAuth2Bundle\Security\Firewall\OAuth2Listener"/>
    <service id="league.oauth2.server.authorization_server" alias="League\OAuth2\Server\AuthorizationServer"/>
    <service id="league.oauth2.server.resource_server" alias="League\OAuth2\Server\ResourceServer"/>
    <service id="league.oauth2.server.grant.client_credentials_grant" alias="League\OAuth2\Server\Grant\ClientCredentialsGrant"/>
    <service id="league.oauth2.server.grant.password_grant" alias="League\OAuth2\Server\Grant\PasswordGrant"/>
    <service id="league.oauth2.server.grant.refresh_token_grant" alias="League\OAuth2\Server\Grant\RefreshTokenGrant"/>
    <service id="league.oauth2.server.grant.auth_code_grant" alias="League\OAuth2\Server\Grant\AuthCodeGrant"/>
    <service id="league.oauth2.server.grant.implicit_grant" alias="League\OAuth2\Server\Grant\ImplicitGrant"/>
    <service id="trikoder.oauth2.controller.authorization_controller" alias="Trikoder\Bundle\OAuth2Bundle\Controller\AuthorizationController"/>
    <service id="trikoder.oauth2.event_listener.authorization.user" alias="Trikoder\Bundle\OAuth2Bundle\EventListener\AuthorizationRequestUserResolvingListener"/>
    <service id="trikoder.oauth2.event_listener.authorization.convert_to_response" alias="Trikoder\Bundle\OAuth2Bundle\EventListener\ConvertExceptionToResponseListener"/>
    <service id="trikoder.oauth2.controller.token_controller" alias="Trikoder\Bundle\OAuth2Bundle\Controller\TokenController"/>
    <service id="trikoder.oauth2.command.create_client_command" alias="Trikoder\Bundle\OAuth2Bundle\Command\CreateClientCommand"/>
    <service id="trikoder.oauth2.command.update_client_command" alias="Trikoder\Bundle\OAuth2Bundle\Command\UpdateClientCommand"/>
    <service id="trikoder.oauth2.command.delete_client_command" alias="Trikoder\Bundle\OAuth2Bundle\Command\DeleteClientCommand"/>
    <service id="trikoder.oauth2.command.list_clients_command" alias="Trikoder\Bundle\OAuth2Bundle\Command\ListClientsCommand"/>
    <service id="trikoder.oauth2.command.clear_expired_tokens_command" alias="Trikoder\Bundle\OAuth2Bundle\Command\ClearExpiredTokensCommand"/>
    <service id="trikoder.oauth2.converter.user_converter" alias="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverter"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverterInterface" alias="Trikoder\Bundle\OAuth2Bundle\Converter\UserConverter"/>
    <service id="trikoder.oauth2.converter.scope_converter" alias="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverterInterface" alias="Trikoder\Bundle\OAuth2Bundle\Converter\ScopeConverter"/>
    <service id="trikoder.oauth2.event.authorization_request_resolve_event_factory" alias="Trikoder\Bundle\OAuth2Bundle\Event\AuthorizationRequestResolveEventFactory"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\ClientManagerInterface" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\AccessTokenManagerInterface" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\RefreshTokenManagerInterface" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\RefreshTokenManager"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\ScopeManagerInterface" alias="Trikoder\Bundle\OAuth2Bundle\Manager\InMemory\ScopeManager"/>
    <service id="Trikoder\Bundle\OAuth2Bundle\Manager\AuthorizationCodeManagerInterface" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AuthorizationCodeManager"/>
    <service id="trikoder.oauth2.manager.doctrine.client_manager" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\ClientManager"/>
    <service id="trikoder.oauth2.manager.doctrine.access_token_manager" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AccessTokenManager"/>
    <service id="trikoder.oauth2.manager.doctrine.refresh_token_manager" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\RefreshTokenManager"/>
    <service id="trikoder.oauth2.manager.doctrine.authorization_code_manager" alias="Trikoder\Bundle\OAuth2Bundle\Manager\Doctrine\AuthorizationCodeManager"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator..AVgILO"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $commandBusAuditorFrameworkCommandBusLogger" alias="monolog.logger.command_bus.auditor_framework_command_bus"/>
    <service id="Psr\Log\LoggerInterface $eventBusAuditorFrameworkEventBusLogger" alias="monolog.logger.event_bus.auditor_framework_event_bus"/>
    <service id="Psr\Log\LoggerInterface $queryBusAuditorFrameworkQueryBusLogger" alias="monolog.logger.query_bus.auditor_framework_query_bus"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id=".service_locator.TpvmGpu" alias="prooph_event_store.projection_managers_locator" public="false"/>
    <service id=".service_locator.qqJtyYG" alias="prooph_event_store.projection_manager_for_projections_locator" public="false"/>
    <service id=".service_locator.anH2cMW" alias="prooph_event_store.projection_read_models_locator" public="false"/>
    <service id=".service_locator.ghMXLZl" alias="prooph_event_store.projections_locator" public="false"/>
    <service id=".service_locator.8Gkm422" alias="auditor_framework_command_bus.plugin.service_locator.locator" public="false"/>
    <service id=".service_locator.gIoolTo" alias="auditor_framework_event_bus.plugin.service_locator.locator" public="false"/>
    <service id=".service_locator.azh6Ml1" alias="auditor_framework_query_bus.plugin.service_locator.locator" public="false"/>
    <service id=".service_locator.tHpW6v3" alias=".service_locator.Y7gDuDN" public="false"/>
    <service id=".service_locator.RWPPqma" alias="prooph_event_store.plugins_locator" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="sensio_framework_extra.psr7.argument_value_resolver.server_request" alias="debug.sensio_framework_extra.psr7.argument_value_resolver.server_request" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="console.command.public_alias.doctrine_cache.contains_command" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.delete_command" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.flush_command" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.stats_command" alias="doctrine_cache.stats_command" public="true"/>
    <service id="console.command.public_alias.TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController" public="true"/>
    <service id="console.command.public_alias.TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\ProjectionRunCommandDecorator" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\ProjectionRunCommandDecorator" public="true"/>
    <service id="console.command.public_alias.TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" alias="TheCodeFighters\Bundle\AuditorFramework\Common\Module\SecurityAndAcl\Infrastructure\Ui\Cli\CreateInitialUsersIfNotExistsController" public="true"/>
  </services>
</container>
