<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'prooph_service_bus.auditor_framework_query_bus' shared service.

include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus/src/MessageBus.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus/src/QueryBus.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/NamedMessageBus.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/NamedMessageBusTrait.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/QueryBus.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus/src/Plugin/Plugin.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus/src/Plugin/AbstractPlugin.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/Plugin/PsrLoggerPlugin.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/MessageContext/ContextFactory.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/MessageContext/MessageDataConverter.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus-symfony-bundle/src/MessageContext/DefaultMessageDataConverter.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus/src/Plugin/MessageFactoryPlugin.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/common/src/Messaging/MessageFactory.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/common/src/Messaging/FQCNMessageFactory.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/service-bus/src/Plugin/ServiceLocatorPlugin.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/common/src/Messaging/MessageConverter.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/common/src/Messaging/NoOpMessageConverter.php';

$this->services['prooph_service_bus.auditor_framework_query_bus'] = $instance = new \Prooph\Bundle\ServiceBus\QueryBus();

$a = new \Symfony\Bridge\Monolog\Logger('query_bus.auditor_framework_query_bus');
$a->pushProcessor(($this->privates['debug.log_processor'] ?? $this->getDebug_LogProcessorService()));
$a->pushHandler(($this->privates['monolog.handler.application'] ?? $this->getMonolog_Handler_ApplicationService()));
$a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
$a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));
\Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass::configureLogger($a);

$instance->setBusName('auditor_framework_query_bus');
$instance->setBusType('query');
$instance->addPlugin(($this->privates['prooph_service_bus.plugin.stopwatch'] ?? $this->load('getProophServiceBus_Plugin_StopwatchService.php')), 'prooph_service_bus.plugin.stopwatch');
$instance->addPlugin(new \Prooph\Bundle\ServiceBus\Plugin\PsrLoggerPlugin(new \Prooph\Bundle\ServiceBus\MessageContext\ContextFactory(new \Prooph\Bundle\ServiceBus\MessageContext\DefaultMessageDataConverter(($this->privates['prooph_service_bus.message_converter'] ?? ($this->privates['prooph_service_bus.message_converter'] = new \Prooph\Common\Messaging\NoOpMessageConverter())))), $a), 'prooph_service_bus.auditor_framework_query_bus.plugin.psr_logger');
$instance->addPlugin(new \Prooph\ServiceBus\Plugin\MessageFactoryPlugin(new \Prooph\Common\Messaging\FQCNMessageFactory()), 'prooph_service_bus.message_factory_plugin.auditor_framework_query_bus');
$instance->addPlugin(($this->services['prooph_service_bus.auditor_framework_query_bus.router'] ?? $this->load('getProophServiceBus_AuditorFrameworkQueryBus_RouterService.php')), 'prooph_service_bus.auditor_framework_query_bus.router');
$instance->addPlugin(new \Prooph\ServiceBus\Plugin\ServiceLocatorPlugin(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'AuditorFramework\\Module\\CamLandingGenerator\\Application\\Query\\FindJoinPageByAffiliateUrl\\FindJoinPageByAffiliateUrlHandler' => ['privates', 'AuditorFramework\\Module\\CamLandingGenerator\\Application\\Query\\FindJoinPageByAffiliateUrl\\FindJoinPageByAffiliateUrlHandler', 'getFindJoinPageByAffiliateUrlHandlerService.php', true],
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\ForgotPassword\\GetPasswordRecoveryHandler' => ['privates', 'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\ForgotPassword\\GetPasswordRecoveryHandler', 'getGetPasswordRecoveryHandlerService.php', true],
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserByUserId\\GetUserByUserIdHandler' => ['privates', 'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserByUserId\\GetUserByUserIdHandler', 'getGetUserByUserIdHandlerService.php', true],
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserByUsername\\GetUserByUsernameHandler' => ['privates', 'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserByUsername\\GetUserByUsernameHandler', 'getGetUserByUsernameHandlerService.php', true],
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserIdByUsername\\GetUserIdByUsernameHandler' => ['privates', 'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserIdByUsername\\GetUserIdByUsernameHandler', 'getGetUserIdByUsernameHandlerService.php', true],
], [
    'AuditorFramework\\Module\\CamLandingGenerator\\Application\\Query\\FindJoinPageByAffiliateUrl\\FindJoinPageByAffiliateUrlHandler' => '?',
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\ForgotPassword\\GetPasswordRecoveryHandler' => '?',
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserByUserId\\GetUserByUserIdHandler' => '?',
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserByUsername\\GetUserByUsernameHandler' => '?',
    'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Module\\SecurityAndAcl\\Application\\Query\\UserIdByUsername\\GetUserIdByUsernameHandler' => '?',
])), 'auditor_framework_query_bus.plugin.service_locator');

return $instance;
