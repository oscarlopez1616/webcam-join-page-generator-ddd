<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository' shared service.

include_once \dirname(__DIR__, 4).'/vendor/prooph/event-sourcing/src/Aggregate/AggregateRepository.php';
include_once \dirname(__DIR__, 4).'/vendor/oscarlopez1616/auditor-framework/src/Common/Types/Domain/WriteModelRepository.php';
include_once \dirname(__DIR__, 4).'/vendor/oscarlopez1616/auditor-framework/src/Common/Types/Infrastructure/Persistence/EventStore/ProophWriteModelRepository.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/event-sourcing/src/Aggregate/AggregateTranslator.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/event-sourcing/src/EventStoreIntegration/AggregateTranslator.php';
include_once \dirname(__DIR__, 4).'/vendor/prooph/event-store-symfony-bundle/src/RepositoryFactory.php';

return $this->services['TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Types\\Infrastructure\\Persistence\\EventStore\\ProophWriteModelRepository'] = (new \Prooph\Bundle\EventStore\RepositoryFactory())->create('TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Types\\Infrastructure\\Persistence\\EventStore\\ProophWriteModelRepository', ($this->services['prooph_event_store.auditor_framework_event_store'] ?? $this->load('getProophEventStore_AuditorFrameworkEventStoreService.php')), 'TheCodeFighters\\Bundle\\AuditorFramework\\Common\\Types\\Domain\\AggregateRoot', new \Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator(), NULL, 'auditor_framework_event_stream', false, false);
