imports:
  - { resource: _common_rest_controllers.yaml }

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Symfony\EventListener\ExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\CommandBus:
    arguments:
      - '@prooph_service_bus.auditor_framework_command_bus'

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Application\QueryBus:
    arguments: [ '@prooph_service_bus.auditor_framework_query_bus' ]

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\IdentifiableDtoResourceToRestResourceDataTransformer:

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Rest\DataTransformer\NonIdentifiableDtoResourceToRestResourceDataTransformer:


  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain\WriteModelRepository: '@TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\ProophWriteModelRepository'

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\CreateNemuruEventStreamIfNotExistsController:
    arguments:
      - '@prooph_event_store.auditor_framework_event_store'
    tags: ['console.command']

  Prooph\Bundle\EventStore\Command\AbstractProjectionCommand:
    abstract: true
    public: true
    autowire: true
    autoconfigure: false
    arguments:
      - '@prooph_event_store.projection_manager_for_projections_locator'
      - '@prooph_event_store.projections_locator'
      - '@prooph_event_store.projection_read_models_locator'

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Cli\ProjectionRunCommandDecorator:
    public: false
    autowire: true
    autoconfigure: false
    parent: Prooph\Bundle\EventStore\Command\AbstractProjectionCommand
    tags: ['console.command']

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\ApiGateway\Unnax\UnnaxDecoder:

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Domain\AmqpCommandPublisherService: '@TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Amqp\Producer\RabbitDomainEventPublisherService'

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Amqp\Producer\RabbitDomainEventPublisherService:
    arguments:
      - '@old_sound_rabbit_mq.event_enqueuer_producer'

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2ClientDirector:
  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Ui\Http\Client\Oauth2WithPasswordCredentialsClientBuilder:
    arguments:
      $baseUrl: '%env(API_BASE_URL)%'
      $reAuthUrl: '%env(API_TOKEN_URL)%'
      $reAuthConfig:
        client_id: '%env(API_GATEWAY_OAUTH2_CLIENT_ID)%'
        client_secret: '%env(API_GATEWAY_OAUTH2_CLIENT_SECRET)%'
        username: '%env(SECURITY_AND_ACL_USER_API_GATEWAY_USER_NAME)%'
        password: '%env(SECURITY_AND_ACL_USER_API_GATEWAY_PASSWORD)%'

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Persistence\EventStore\MessageFactory:

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\CsvReader:

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\Csv\DataTransformer\KeyValueFromCsvDataTransformer:

  TheCodeFighters\Bundle\AuditorFramework\Common\Types\Infrastructure\FileSystem\TheLeagueCloudDocumentManager:
    arguments:
      $filesystem: '@default_filesystem'
